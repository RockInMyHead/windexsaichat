#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö WindexAI
–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
"""

import os
import sqlite3
from datetime import datetime


def migrate_database():
    """–ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    db_path = "windexai.db"

    if not os.path.exists(db_path):
        print("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é...")
        from database import create_tables

        create_tables()
        print("‚úÖ –ù–æ–≤–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞")
        return

    print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")

    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    backup_path = f"windexai_backup_{datetime.now().strftime('%Y%m%d_%H%M%S')}.db"
    os.rename(db_path, backup_path)
    print(f"üì¶ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_path}")

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –¥–ª—è —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    old_conn = sqlite3.connect(backup_path)
    old_cursor = old_conn.cursor()

    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Å—Ö–µ–º–æ–π
    new_conn = sqlite3.connect(db_path)
    new_cursor = new_conn.cursor()

    try:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ —Ç–∞–±–ª–∏—Ü—ã
        from database import create_tables

        create_tables()

        # –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        print("üë• –ú–∏–≥—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        old_cursor.execute(
            "SELECT id, username, email, hashed_password, created_at FROM users"
        )
        users = old_cursor.fetchall()

        for user in users:
            new_cursor.execute(
                """
                INSERT INTO users (id, username, email, hashed_password, created_at)
                VALUES (?, ?, ?, ?, ?)
            """,
                user,
            )

        # –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤
        print("üí¨ –ú–∏–≥—Ä–∏—Ä—É–µ–º —Ä–∞–∑–≥–æ–≤–æ—Ä—ã...")
        old_cursor.execute(
            "SELECT id, title, created_at, updated_at, user_id FROM conversations"
        )
        conversations = old_cursor.fetchall()

        for conv in conversations:
            new_cursor.execute(
                """
                INSERT INTO conversations (id, title, created_at, updated_at, user_id)
                VALUES (?, ?, ?, ?, ?)
            """,
                conv,
            )

        # –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏–π
        print("üìù –ú–∏–≥—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è...")
        old_cursor.execute(
            "SELECT id, role, content, timestamp, conversation_id FROM messages"
        )
        messages = old_cursor.fetchall()

        for msg in messages:
            new_cursor.execute(
                """
                INSERT INTO messages (id, role, content, message_type, audio_url, document_id, timestamp, conversation_id)
                VALUES (?, ?, ?, 'text', NULL, NULL, ?, ?)
            """,
                (msg[0], msg[1], msg[2], msg[3], msg[4]),
            )

        # –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–µ–ø–ª–æ–µ–≤
        print("üöÄ –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–µ–ø–ª–æ–∏...")
        old_cursor.execute(
            "SELECT id, title, description, deploy_url, html_content, css_content, js_content, is_active, created_at, updated_at, user_id FROM deployments"
        )
        deployments = old_cursor.fetchall()

        for dep in deployments:
            new_cursor.execute(
                """
                INSERT INTO deployments (id, title, description, deploy_url, html_content, css_content, js_content, is_active, created_at, updated_at, user_id)
                VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
            """,
                dep,
            )

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        new_conn.commit()
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
        new_conn.close()
        os.remove(db_path)
        os.rename(backup_path, db_path)
        print("üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è")
        raise

    finally:
        old_conn.close()
        new_conn.close()


if __name__ == "__main__":
    migrate_database()
