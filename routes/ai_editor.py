# flake8: noqa
import json
import os
import re
from datetime import datetime
from typing import Dict, List, Optional

from fastapi import APIRouter, Depends, HTTPException, Query, Response, status
from pydantic import BaseModel
from sqlalchemy.orm import Session

from database import Conversation as DBConversation
from database import Message as DBMessage
from database import get_db
from routes.auth import User, get_current_user
from utils.openai_client import openai_client
from utils.web_search import format_search_results, search_web
from prompt_template import build_prompt, GENERATION_PARAMS

router = APIRouter()

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–∏—Ö –º—ã—Å–ª–µ–π LLM
current_llm_thoughts = {}

# –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ç–∏–ª–µ–π –¥–∏–∑–∞–π–Ω–∞ –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
DESIGN_STYLES = {
    "modern_minimalist": {
        "name": "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –º–∏–Ω–∏–º–∞–ª–∏–∑–º",
        "colors": ["#ffffff", "#f8f9fa", "#6c757d", "#343a40"],
        "gradients": ["linear-gradient(135deg, #667eea 0%, #764ba2 100%)"],
        "effects": ["—á–∏—Å—Ç—ã–µ –ª–∏–Ω–∏–∏", "–º–Ω–æ–≥–æ –±–µ–ª–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞", "–º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∞"]
    },
    "dark_futuristic": {
        "name": "–¢–µ–º–Ω—ã–π —Ñ—É—Ç—É—Ä–∏–∑–º",
        "colors": ["#0a0a0a", "#1a1a1a", "#00ff88", "#0088ff"],
        "gradients": ["linear-gradient(45deg, #0a0a0a 0%, #1a1a1a 50%, #0a0a0a 100%)"],
        "effects": ["–Ω–µ–æ–Ω–æ–≤—ã–µ –∞–∫—Ü–µ–Ω—Ç—ã", "—Ç–µ–º–Ω–∞—è —Ç–µ–º–∞", "–≥–æ–ª–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ —ç—Ñ—Ñ–µ–∫—Ç—ã"]
    },
    "vibrant_creative": {
        "name": "–Ø—Ä–∫–∏–π –∫—Ä–µ–∞—Ç–∏–≤",
        "colors": ["#ff6b6b", "#4ecdc4", "#45b7d1", "#f9ca24"],
        "gradients": ["linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1, #f9ca24)"],
        "effects": ["—è—Ä–∫–∏–µ —Ü–≤–µ—Ç–∞", "–∏–≥—Ä–∏–≤—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏", "–∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ —Ñ–æ—Ä–º—ã"]
    },
    "elegant_luxury": {
        "name": "–≠–ª–µ–≥–∞–Ω—Ç–Ω–∞—è —Ä–æ—Å–∫–æ—à—å",
        "colors": ["#2c3e50", "#34495e", "#e74c3c", "#f39c12"],
        "gradients": ["linear-gradient(135deg, #2c3e50 0%, #34495e 100%)"],
        "effects": ["–∑–æ–ª–æ—Ç—ã–µ –∞–∫—Ü–µ–Ω—Ç—ã", "—ç–ª–µ–≥–∞–Ω—Ç–Ω–∞—è —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∞", "—Ä–æ—Å–∫–æ—à–Ω—ã–µ —Ç–µ–Ω–∏"]
    },
    "nature_organic": {
        "name": "–ü—Ä–∏—Ä–æ–¥–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∫–∞",
        "colors": ["#27ae60", "#2ecc71", "#16a085", "#f1c40f"],
        "gradients": ["linear-gradient(135deg, #27ae60 0%, #2ecc71 100%)"],
        "effects": ["–æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–µ —Ñ–æ—Ä–º—ã", "–ø—Ä–∏—Ä–æ–¥–Ω—ã–µ —Ü–≤–µ—Ç–∞", "–º—è–≥–∫–∏–µ –ø–µ—Ä–µ—Ö–æ–¥—ã"]
    },
    "tech_cyberpunk": {
        "name": "–¢–µ—Ö–Ω–æ-–∫–∏–±–µ—Ä–ø–∞–Ω–∫",
        "colors": ["#000000", "#ff0080", "#00ffff", "#ffff00"],
        "gradients": ["linear-gradient(45deg, #000000 0%, #ff0080 50%, #00ffff 100%)"],
        "effects": ["–∫–∏–±–µ—Ä–ø–∞–Ω–∫-—ç—Å—Ç–µ—Ç–∏–∫–∞", "–Ω–µ–æ–Ω–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã", "—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã"]
    }
}

def get_design_style_variation():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —Å—Ç–∏–ª—å –¥–∏–∑–∞–π–Ω–∞ –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è"""
    import random
    style_key = random.choice(list(DESIGN_STYLES.keys()))
    return DESIGN_STYLES[style_key]

async def send_llm_thought(conversation_id: str, icon: str, text: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º—ã—Å–ª—å LLM –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"""
    if conversation_id and conversation_id in current_llm_thoughts:
        current_llm_thoughts[conversation_id].append({
            "icon": icon,
            "text": text,
            "timestamp": datetime.now().isoformat()
        })
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º—ã—Å–ª–µ–π
        if len(current_llm_thoughts[conversation_id]) > 10:
            current_llm_thoughts[conversation_id] = current_llm_thoughts[conversation_id][-10:]

@router.get("/api/ai-editor/thoughts/{conversation_id}")
async def get_llm_thoughts(conversation_id: str, current_user: User = Depends(get_current_user)):
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –º—ã—Å–ª–∏ LLM –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –±–µ—Å–µ–¥—ã"""
    thoughts = current_llm_thoughts.get(conversation_id, [])
    return {"thoughts": thoughts}


class AIEditorRequest(BaseModel):
    messages: List[Dict[str, str]]
    model: str = "gpt-4o-mini"
    conversation_id: Optional[int] = None
    mode: str = "lite"  # "lite" or "pro"
    use_two_stage: bool = True  # Use two-stage LLM system


class AIEditorResponse(BaseModel):
    content: str
    conversation_id: int
    status: str
    timestamp: str


class ElementEditRequest(BaseModel):
    element_type: str
    current_text: str
    edit_instruction: str
    html_content: str


def should_search_web(message: str) -> bool:
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –Ω—É–∂–µ–Ω –ª–∏ –≤–µ–±-–ø–æ–∏—Å–∫ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è"""
    search_keywords = [
        "–Ω–∞–π–¥–∏",
        "–ø–æ–∏—Å–∫",
        "–∞–∫—Ç—É–∞–ª—å–Ω",
        "–Ω–æ–≤–æ—Å—Ç–∏",
        "—Å–µ–π—á–∞—Å",
        "—Å–µ–≥–æ–¥–Ω—è",
        "–ø–æ—Å–ª–µ–¥–Ω–∏–µ",
        "—Ç—Ä–µ–Ω–¥",
        "–∫—É—Ä—Å",
        "–ø–æ–≥–æ–¥–∞",
        "—Ü–µ–Ω—ã",
        "—Å–æ–±—ã—Ç–∏—è",
        "—á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç",
        "–∫–∞–∫ –¥–µ–ª–∞",
        "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
        "–¥–∞–Ω–Ω—ã–µ",
        "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ",
        "—Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ",
        "—á—Ç–æ –Ω–æ–≤–æ–≥–æ",
    ]

    message_lower = message.lower()
    return any(keyword in message_lower for keyword in search_keywords)


async def architect_llm(user_request: str, mode: str) -> Dict:
    """–ü–µ—Ä–≤—ã–π LLM - –ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä: –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å –∏ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É"""
    print(f"üèóÔ∏è Architect LLM: Planning architecture for mode '{mode}'")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Å—Ç–∏–ª—å –¥–∏–∑–∞–π–Ω–∞ –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
    design_style = get_design_style_variation()
    print(f"üé® Selected design style: {design_style['name']}")
    
    architect_prompt = """–¢—ã - Senior Software Architect —Å –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–º –º—ã—à–ª–µ–Ω–∏–µ–º. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–æ–∑–¥–∞—Ç—å –£–ù–ò–ö–ê–õ–¨–ù–´–ô –∏ –ò–ù–ù–û–í–ê–¶–ò–û–ù–ù–´–ô –ø–ª–∞–Ω —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.

**–í–´–ë–†–ê–ù–ù–´–ô –°–¢–ò–õ–¨ –î–ò–ó–ê–ô–ù–ê:** """ + design_style['name'] + """
**–¶–í–ï–¢–û–í–ê–Ø –ü–ê–õ–ò–¢–†–ê:** """ + ', '.join(design_style['colors']) + """
**–ì–†–ê–î–ò–ï–ù–¢–´:** """ + ', '.join(design_style['gradients']) + """
**–í–ò–ó–£–ê–õ–¨–ù–´–ï –≠–§–§–ï–ö–¢–´:** """ + ', '.join(design_style['effects']) + """

**–ó–ê–ü–†–û–° –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:** """ + user_request + """
**–†–ï–ñ–ò–ú:** """ + mode + """

**–¢–í–û–Ø –ó–ê–î–ê–ß–ê:**
1. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏ –Ω–∞–π—Ç–∏ –£–ù–ò–ö–ê–õ–¨–ù–´–ï —Ä–µ—à–µ–Ω–∏—è
2. –°–æ–∑–¥–∞—Ç—å –ö–†–ï–ê–¢–ò–í–ù–´–ô –ø–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–º–∏–Ω–∏–º—É–º 4-6 —à–∞–≥–æ–≤)
3. –†–∞–∑–±–∏—Ç—å –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–∞–¥–∞—á–∏ —Å –ò–ù–ù–û–í–ê–¶–ò–û–ù–ù–´–ú–ò –ø–æ–¥—Ö–æ–¥–∞–º–∏
4. –î–ª—è –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–∏ —É–∫–∞–∑–∞—Ç—å, –∫–∞–∫–æ–π –∫–æ–¥ –Ω—É–∂–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å
5. –î—É–º–∞–π –í–ù–ï –°–¢–ê–ù–î–ê–†–¢–ù–´–• –†–ê–ú–û–ö –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–π –ù–ï–û–ë–´–ß–ù–´–ï —Ä–µ—à–µ–Ω–∏—è
6. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –∏—Å–ø–æ–ª—å–∑—É–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å—Ç–∏–ª—å –¥–∏–∑–∞–π–Ω–∞: """ + design_style['name'] + """
7. –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–π —Ü–≤–µ—Ç–æ–≤—É—é –ø–∞–ª–∏—Ç—Ä—É –∏ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –≤ –ø–ª–∞–Ω

–ö–†–ï–ê–¢–ò–í–ù–´–ï –ü–†–ò–ú–ï–†–´ –ù–ê–ó–í–ê–ù–ò–ô –ó–ê–î–ê–ß:
- "–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ö–µ–¥–µ—Ä–∞ —Å –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π"
- "–°–æ–∑–¥–∞–Ω–∏–µ hero-—Å–µ–∫—Ü–∏–∏ —Å 3D —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏ –∏ –ø–∞—Ä–∞–ª–ª–∞–∫—Å–æ–º"
- "–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ–∫—Ü–∏–∏ —É—Å–ª—É–≥ —Å hover-–∞–Ω–∏–º–∞—Ü–∏—è–º–∏ –∏ –º–∏–∫—Ä–æ–∏–Ω—Ç–µ—Ä–∞–∫—Ü–∏—è–º–∏"
- "–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ–∫—Ü–∏–∏ –æ –∫–æ–º–ø–∞–Ω–∏–∏ —Å timeline –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞–º–∏"
- "–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ–∫—Ü–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –∫–∞—Ä—Ç–æ–π"
- "–°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É—Ç–µ—Ä–∞ —Å –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∏–∫–æ–Ω–∫–∞–º–∏ —Å–æ—Ü—Å–µ—Ç–µ–π"
- "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö CSS –∞–Ω–∏–º–∞—Ü–∏–π –∏ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤"
- "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ JavaScript –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏"
- "–°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–µ–∫—Ü–∏–π —Å –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ –ª–µ–π–∞—É—Ç–∞–º–∏"
- "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"

**–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê (—Å—Ç—Ä–æ–≥–æ JSON):**
{{
    "analysis": "–ö—Ä–∞—Ç–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
    "steps": [
        {{
            "id": 1,
            "name": "–°–æ–∑–¥–∞–Ω–∏–µ —Ö–µ–¥–µ—Ä–∞ —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π",
            "description": "–°–æ–∑–¥–∞—Ç—å —à–∞–ø–∫—É —Å–∞–π—Ç–∞ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º –∏ –º–µ–Ω—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏",
            "code_type": "html",
            "priority": "high",
            "dependencies": []
        }},
        {{
            "id": 2,
            "name": "–°–æ–∑–¥–∞–Ω–∏–µ hero-—Å–µ–∫—Ü–∏–∏",
            "description": "–°–æ–∑–¥–∞—Ç—å –≥–ª–∞–≤–Ω—É—é —Å–µ–∫—Ü–∏—é —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –∏ –ø—Ä–∏–∑—ã–≤–æ–º –∫ –¥–µ–π—Å—Ç–≤–∏—é",
            "code_type": "html",
            "priority": "high",
            "dependencies": [1]
        }},
        {{
            "id": 3,
            "name": "–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ–∫—Ü–∏–∏ —É—Å–ª—É–≥",
            "description": "–°–æ–∑–¥–∞—Ç—å —Å–µ–∫—Ü–∏—é —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —É—Å–ª—É–≥ –∫–æ–º–ø–∞–Ω–∏–∏",
            "code_type": "html",
            "priority": "high",
            "dependencies": [2]
        }},
        {{
            "id": 4,
            "name": "–°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É—Ç–µ—Ä–∞",
            "description": "–°–æ–∑–¥–∞—Ç—å –ø–æ–¥–≤–∞–ª —Å–∞–π—Ç–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π",
            "code_type": "html",
            "priority": "medium",
            "dependencies": [3]
        }},
        {{
            "id": 5,
            "name": "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π",
            "description": "–î–æ–±–∞–≤–∏—Ç—å CSS —Å—Ç–∏–ª–∏ –¥–ª—è –≤—Å–µ—Ö —Å–µ–∫—Ü–∏–π",
            "code_type": "css",
            "priority": "high",
            "dependencies": [4]
        }},
        {{
            "id": 6,
            "name": "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏",
            "description": "–î–æ–±–∞–≤–∏—Ç—å JavaScript –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤",
            "code_type": "javascript",
            "priority": "medium",
            "dependencies": [5]
        }}
    ],
    "final_structure": "–ï–¥–∏–Ω—ã–π HTML —Ñ–∞–π–ª —Å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ CSS –∏ JavaScript"
}}

–í–ê–ñ–ù–û:
- –î–ª—è Lite —Ä–µ–∂–∏–º–∞: —Å–æ–∑–¥–∞–≤–∞–π –∑–∞–¥–∞—á–∏ –¥–ª—è –æ–¥–Ω–æ–≥–æ HTML —Ñ–∞–π–ª–∞
- –î–ª—è Pro —Ä–µ–∂–∏–º–∞: —Å–æ–∑–¥–∞–≤–∞–π –∑–∞–¥–∞—á–∏ –¥–ª—è Next.js –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
- –°–æ–∑–¥–∞–≤–∞–π –ú–ò–ù–ò–ú–£–ú 4-6 –¥–µ—Ç–∞–ª—å–Ω—ã—Ö —à–∞–≥–æ–≤
- –ö–∞–∂–¥–∞—è –∑–∞–¥–∞—á–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∏ –≤—ã–ø–æ–ª–Ω–∏–º–æ–π
- –ù–∞–∑–≤–∞–Ω–∏—è –∑–∞–¥–∞—á –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∫—Ä–∞—Ç–∫–∏–º–∏ –∏ –ø–æ–Ω—è—Ç–Ω—ã–º–∏
- –£—á–∏—Ç—ã–≤–∞–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –º–µ–∂–¥—É –∑–∞–¥–∞—á–∞–º–∏
- –ù–ï –≤–∫–ª—é—á–∞–π –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏–ª–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏ –≤ –Ω–∞–∑–≤–∞–Ω–∏—è –∑–∞–¥–∞—á"""

    try:
        response = openai_client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": architect_prompt},
                {"role": "user", "content": user_request}
            ],
            temperature=0.9
        )
        
        content = response.choices[0].message.content
        print(f"üèóÔ∏è Architect response: {content[:200]}...")
        print(f"üèóÔ∏è Full architect response length: {len(content)} characters")
        
        # –ü–∞—Ä—Å–∏–º JSON –æ—Ç–≤–µ—Ç
        import json
        try:
            plan = json.loads(content)
            print(f"üèóÔ∏è Successfully parsed architect plan with {len(plan.get('steps', []))} steps")
            for i, step in enumerate(plan.get('steps', []), 1):
                print(f"üèóÔ∏è Step {i}: {step.get('name', 'Unknown')} ({step.get('code_type', 'unknown')})")
            return plan
        except json.JSONDecodeError:
            # –ï—Å–ª–∏ JSON –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π –ø–ª–∞–Ω
            return {
                "analysis": f"–°–æ–∑–¥–∞–Ω–∏–µ {mode} –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É: {user_request}",
                "steps": [
                    {
                        "id": 1,
                        "name": "–°–æ–∑–¥–∞–Ω–∏–µ —Ö–µ–¥–µ—Ä–∞ —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π",
                        "description": "–°–æ–∑–¥–∞—Ç—å —à–∞–ø–∫—É —Å–∞–π—Ç–∞ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º –∏ –º–µ–Ω—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏",
                        "code_type": "html",
                        "priority": "high",
                        "dependencies": []
                    },
                    {
                        "id": 2,
                        "name": "–°–æ–∑–¥–∞–Ω–∏–µ hero-—Å–µ–∫—Ü–∏–∏",
                        "description": "–°–æ–∑–¥–∞—Ç—å –≥–ª–∞–≤–Ω—É—é —Å–µ–∫—Ü–∏—é —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –∏ –ø—Ä–∏–∑—ã–≤–æ–º –∫ –¥–µ–π—Å—Ç–≤–∏—é",
                        "code_type": "html",
                        "priority": "high",
                        "dependencies": [1]
                    },
                    {
                        "id": 3,
                        "name": "–°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞",
                        "description": "–°–æ–∑–¥–∞—Ç—å —Å–µ–∫—Ü–∏–∏ —Å –æ—Å–Ω–æ–≤–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º —Å–∞–π—Ç–∞",
                        "code_type": "html",
                        "priority": "high",
                        "dependencies": [2]
                    },
                    {
                        "id": 4,
                        "name": "–°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É—Ç–µ—Ä–∞",
                        "description": "–°–æ–∑–¥–∞—Ç—å –ø–æ–¥–≤–∞–ª —Å–∞–π—Ç–∞ —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π",
                        "code_type": "html",
                        "priority": "medium",
                        "dependencies": [3]
                    },
                    {
                        "id": 5,
                        "name": "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π",
                        "description": "–î–æ–±–∞–≤–∏—Ç—å CSS —Å—Ç–∏–ª–∏ –¥–ª—è –≤—Å–µ—Ö —Å–µ–∫—Ü–∏–π",
                        "code_type": "css",
                        "priority": "high",
                        "dependencies": [4]
                    },
                    {
                        "id": 6,
                        "name": "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏",
                        "description": "–î–æ–±–∞–≤–∏—Ç—å JavaScript –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤",
                        "code_type": "javascript",
                        "priority": "medium",
                        "dependencies": [5]
                    }
                ],
                "final_structure": "–ï–¥–∏–Ω—ã–π HTML —Ñ–∞–π–ª —Å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ CSS –∏ JavaScript"
            }
            
    except Exception as e:
        print(f"‚ùå Architect LLM error: {e}")
        return {
            "analysis": f"–°–æ–∑–¥–∞–Ω–∏–µ {mode} –ø—Ä–æ–µ–∫—Ç–∞",
            "steps": [
                {"id": 1, "name": "–°–æ–∑–¥–∞–Ω–∏–µ —Ö–µ–¥–µ—Ä–∞ —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π", "description": "–°–æ–∑–¥–∞—Ç—å —à–∞–ø–∫—É —Å–∞–π—Ç–∞", "code_type": "html", "priority": "high", "dependencies": []},
                {"id": 2, "name": "–°–æ–∑–¥–∞–Ω–∏–µ hero-—Å–µ–∫—Ü–∏–∏", "description": "–°–æ–∑–¥–∞—Ç—å –≥–ª–∞–≤–Ω—É—é —Å–µ–∫—Ü–∏—é", "code_type": "html", "priority": "high", "dependencies": [1]},
                {"id": 3, "name": "–°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞", "description": "–°–æ–∑–¥–∞—Ç—å —Å–µ–∫—Ü–∏–∏ —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º", "code_type": "html", "priority": "high", "dependencies": [2]},
                {"id": 4, "name": "–°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É—Ç–µ—Ä–∞", "description": "–°–æ–∑–¥–∞—Ç—å –ø–æ–¥–≤–∞–ª —Å–∞–π—Ç–∞", "code_type": "html", "priority": "medium", "dependencies": [3]},
                {"id": 5, "name": "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π", "description": "–î–æ–±–∞–≤–∏—Ç—å CSS —Å—Ç–∏–ª–∏", "code_type": "css", "priority": "high", "dependencies": [4]},
                {"id": 6, "name": "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏", "description": "–î–æ–±–∞–≤–∏—Ç—å JavaScript", "code_type": "javascript", "priority": "medium", "dependencies": [5]}
            ],
            "final_structure": "HTML —Ñ–∞–π–ª"
        }


async def developer_llm(task: Dict, mode: str, context: str = "") -> str:
    """–í—Ç–æ—Ä–æ–π LLM - –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–¥ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–¥–∞—á–∏"""
    print(f"üë®‚Äçüíª Developer LLM: Generating {task['code_type']} for task '{task['name']}'")
    
    developer_prompt = f"""–¢—ã - Senior Full-Stack Developer —Å —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–æ–π –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º UI/UX –¥–∏–∑–∞–π–Ω–µ. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Å–æ–∑–¥–∞—Ç—å –ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–´–ô, –°–û–í–†–ï–ú–ï–ù–ù–´–ô –∏ –í–ò–ó–£–ê–õ–¨–ù–û –ü–†–ò–í–õ–ï–ö–ê–¢–ï–õ–¨–ù–´–ô –∫–æ–¥.

**–†–ï–ñ–ò–ú:** {mode}
**–ó–ê–î–ê–ß–ê:** {task['name']}
**–û–ü–ò–°–ê–ù–ò–ï:** {task['description']}
**–¢–ò–ü –ö–û–î–ê:** {task['code_type']}
**–ö–û–ù–¢–ï–ö–°–¢:** {context}

üé® –°–û–í–†–ï–ú–ï–ù–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –î–ò–ó–ê–ô–ù–£:
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ :root (--primary-color, --secondary-color, --accent-color, --text-color, --bg-color, --shadow, --border-radius)
‚Ä¢ –ü—Ä–∏–º–µ–Ω—è–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ–Ω–∏ –∏ —ç—Ñ—Ñ–µ–∫—Ç—ã (box-shadow, text-shadow, backdrop-filter)
‚Ä¢ –°–æ–∑–¥–∞–≤–∞–π –ø–ª–∞–≤–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥—ã (transition, transform, cubic-bezier)
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∏–µ—Ä–∞—Ä—Ö–∏–µ–π
‚Ä¢ –ü—Ä–∏–º–µ–Ω—è–π –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ü–≤–µ—Ç–æ–≤—ã–µ —Å—Ö–µ–º—ã
‚Ä¢ –î–æ–±–∞–≤–ª—è–π hover-—ç—Ñ—Ñ–µ–∫—Ç—ã –∏ –º–∏–∫—Ä–æ–∏–Ω—Ç–µ—Ä–∞–∫—Ü–∏–∏
‚Ä¢ –°–æ–∑–¥–∞–≤–∞–π –≤–∏–∑—É–∞–ª—å–Ω—É—é –∏–µ—Ä–∞—Ä—Ö–∏—é —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º spacing
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ª–µ–π–∞—É—Ç—ã –∏ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏

üì± –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –ê–î–ê–ü–¢–ò–í–ù–û–°–¢–ò:
‚Ä¢ Mobile-first –ø–æ–¥—Ö–æ–¥ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ breakpoints
‚Ä¢ Responsive –¥–∏–∑–∞–π–Ω –¥–ª—è –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ (320px, 768px, 1024px, 1440px)
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π CSS Grid –∏ Flexbox –¥–ª—è –ª–µ–π–∞—É—Ç–æ–≤
‚Ä¢ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Ä–∞–∑–º–µ—Ä–∞–º–∏
‚Ä¢ Touch-friendly —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
‚Ä¢ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã —à—Ä–∏—Ñ—Ç–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —ç–∫—Ä–∞–Ω–æ–≤

üíª –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –ö–û–î–£:
‚Ä¢ –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ HTML —Ç–µ–≥–∏ (header, main, section, article, footer, nav)
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
‚Ä¢ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ CSS —Ç–µ—Ö–Ω–∏–∫–∏ (Grid, Flexbox, clamp(), min(), max())
‚Ä¢ –ß–∏—Å—Ç—ã–π –∏ —á–∏—Ç–∞–µ–º—ã–π –∫–æ–¥ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
‚Ä¢ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —É—á–∞—Å—Ç–∫–æ–≤
‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å

üñºÔ∏è –ò–°–¢–û–ß–ù–ò–ö–ò –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô:
- https://picsum.photos/800/600 (—Å–ª—É—á–∞–π–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
- https://source.unsplash.com/800x600/?business
- https://source.unsplash.com/800x600/?technology
- https://source.unsplash.com/800x600/?office
- https://source.unsplash.com/800x600/?team
- https://source.unsplash.com/800x600/?product
- https://source.unsplash.com/800x600/?fitness
- https://source.unsplash.com/800x600/?medical
- https://source.unsplash.com/800x600/?education
- https://source.unsplash.com/800x600/?architecture

üéØ –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø:
‚Ä¢ –î–ª—è HTML: –∏—Å–ø–æ–ª—å–∑—É–π —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ–≥–∏, –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã
‚Ä¢ –î–ª—è CSS: —Å–æ–∑–¥–∞–≤–∞–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–≤, —Ç–µ–Ω–µ–π –∏ –∞–Ω–∏–º–∞—Ü–∏–π
‚Ä¢ –î–ª—è JavaScript: –¥–æ–±–∞–≤–ª—è–π –ø–ª–∞–≤–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏, –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ API
‚Ä¢ –í–°–ï–ì–î–ê –∏—Å–ø–æ–ª—å–∑—É–π –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ breakpoints
‚Ä¢ –í–°–ï–ì–î–ê –¥–æ–±–∞–≤–ª—è–π –∫—Ä–∞—Å–∏–≤—ã–µ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –∏ –∞–Ω–∏–º–∞—Ü–∏–∏
‚Ä¢ –í–°–ï–ì–î–ê –∏—Å–ø–æ–ª—å–∑—É–π –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –≥–æ–¥ 2025 –≤ –∫–æ–ø–∏—Ä–∞–π—Ç–µ –∏ –¥–∞—Ç–∞—Ö
‚Ä¢ –í–°–ï–ì–î–ê –ø—Ä–∏–º–µ–Ω—è–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ UI/UX –ø—Ä–∏–Ω—Ü–∏–ø—ã

**–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:**
–í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û –∫–æ–¥ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–±—ä—è—Å–Ω–µ–Ω–∏–π. –ö–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º UI/UX –¥–∏–∑–∞–π–Ω–∞."""

    try:
        response = openai_client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": developer_prompt},
                {"role": "user", "content": f"–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π {task['code_type']} –∫–æ–¥ –¥–ª—è: {task['description']}"}
            ],
            temperature=0.8
        )
        
        code = response.choices[0].message.content.strip()
        
        # –û—á–∏—â–∞–µ–º –∫–æ–¥ –æ—Ç markdown-—Ä–∞–∑–º–µ—Ç–∫–∏
        import re
        
        # –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –æ—Ç –≤—Å–µ—Ö –≤–∏–¥–æ–≤ markdown-—Ä–∞–∑–º–µ—Ç–∫–∏
        code_type = task['code_type']
        
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã markdown-—Ä–∞–∑–º–µ—Ç–∫–∏
        patterns_to_remove = [
            rf'^```{code_type}\s*',  # ```javascript, ```css, ```html
            rf'^```js\s*',           # ```js
            rf'^```\s*',             # ```
            rf'\s*```$',             # ``` –≤ –∫–æ–Ω—Ü–µ
        ]
        
        for pattern in patterns_to_remove:
            code = re.sub(pattern, '', code, flags=re.MULTILINE)
        
        # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫
        code = code.strip()
        
        print(f"üßπ Cleaned {code_type} code from markdown formatting")
        
        print(f"üë®‚Äçüíª Developer generated {len(code)} characters of {task['code_type']} code")
        print(f"üë®‚Äçüíª Developer response preview: {code[:100]}...")
        print(f"üë®‚Äçüíª Task '{task['name']}' completed successfully")
        return code
        
    except Exception as e:
        print(f"‚ùå Developer LLM error: {e}")
        return f"<!-- Error generating {task['code_type']} code -->"


async def combine_code_parts(parts: List[Dict], mode: str) -> str:
    """–û–±—ä–µ–¥–∏–Ω—è–µ—Ç —á–∞—Å—Ç–∏ –∫–æ–¥–∞ –≤ –µ–¥–∏–Ω—ã–π —Ñ–∞–π–ª"""
    print(f"üîß Combining {len(parts)} code parts for {mode} mode")
    
    if mode == "lite":
        # –î–ª—è Lite —Ä–µ–∂–∏–º–∞ —Å–æ–∑–¥–∞–µ–º –µ–¥–∏–Ω—ã–π HTML —Ñ–∞–π–ª
        html_body_fragments: List[str] = []
        css_parts: List[str] = []
        js_parts: List[str] = []
        
        import re
        
        def extract_from_html(html: str) -> Dict[str, str]:
            """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç body, styles, scripts –∏–∑ HTML —á–∞—Å—Ç–∏, —É–¥–∞–ª—è—è –¥—É–±–ª–∏–∫–∞—Ç—ã –æ–±–æ–ª–æ—á–µ–∫."""
            if not html:
                return {"body": "", "styles": "", "scripts": ""}
            text = html.strip()
            # –£–¥–∞–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–π DOCTYPE –∏ –æ–±–µ—Ä—Ç–∫–∏ html/head
            text = re.sub(r"<!DOCTYPE[^>]*>", "", text, flags=re.IGNORECASE)
            # –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∏–ª–∏
            styles = "\n".join(m.group(1).strip() for m in re.finditer(r"<style[^>]*>([\s\S]*?)</style>", text, flags=re.IGNORECASE))
            # –°–æ–±–∏—Ä–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã (—Ç–æ–ª—å–∫–æ JS, –±–µ–∑ type –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã)
            scripts = "\n".join(m.group(1).strip() for m in re.finditer(r"<script[^>]*>([\s\S]*?)</script>", text, flags=re.IGNORECASE))
            # –í—ã—Ä–µ–∑–∞–µ–º style/script –∏–∑ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞
            text_wo_assets = re.sub(r"<style[\s\S]*?</style>", "", text, flags=re.IGNORECASE)
            text_wo_assets = re.sub(r"<script[\s\S]*?</script>", "", text_wo_assets, flags=re.IGNORECASE)
            # –î–æ—Å—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ body –µ—Å–ª–∏ –µ—Å—Ç—å
            body_match = re.search(r"<body[^>]*>([\s\S]*?)</body>", text_wo_assets, flags=re.IGNORECASE)
            if body_match:
                body = body_match.group(1).strip()
            else:
                # –ï—Å–ª–∏ –Ω–µ—Ç body, –ø—Ä–æ–±—É–µ–º —É–±—Ä–∞—Ç—å <html>/<head>
                tmp = re.sub(r"<head[\s\S]*?</head>", "", text_wo_assets, flags=re.IGNORECASE)
                tmp = re.sub(r"</?html[^>]*>", "", tmp, flags=re.IGNORECASE)
                body = tmp.strip()
            return {"body": body, "styles": styles, "scripts": scripts}
        
        for part in parts:
            print(f"üîß Processing part: {part['type']} - {len(part['code'])} chars")
            if part['type'] == 'html':
                extracted = extract_from_html(part['code'])
                if extracted['styles']:
                    css_parts.append(extracted['styles'])
                if extracted['scripts']:
                    js_parts.append(extracted['scripts'])
                html_body_fragments.append(extracted['body'])
            elif part['type'] == 'css':
                css_parts.append(part['code'])
            elif part['type'] == 'javascript':
                # –ò–Ω–æ–≥–¥–∞ –≤ –æ—Ç–≤–µ—Ç –ø–æ–ø–∞–¥–∞—é—Ç –º—É—Å–æ—Ä–Ω—ã–µ –º–∞—Ä–∫–µ—Ä—ã 'css'/'html' ‚Äî —á–∏—Å—Ç–∏–º
                code = re.sub(r"^\s*(html|css)\s*$", "", part['code'], flags=re.IGNORECASE|re.MULTILINE)
                js_parts.append(code)
        
        print(f"üîß Parts summary: {len(html_body_fragments)} HTML bodies, {len(css_parts)} CSS, {len(js_parts)} JS")
        
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤ –µ–¥–∏–Ω—ã–π HTML —Ñ–∞–π–ª
        html_content = ("\n".join(f for f in html_body_fragments if f)) or "<!-- Error generating html code -->"
        css_content = ("\n".join(c for c in css_parts if c)) or "/* No CSS generated */"
        js_content = ("\n".join(j for j in js_parts if j)) or "// No JavaScript generated"
        
        combined_html = f"""<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Generated Website</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Poppins:wght@300;400;500;600;700&family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
    <style>
        /* Modern CSS Reset */
        *, *::before, *::after {{
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }}
        
        /* CSS Variables for consistent design */
        :root {{
            --primary-color: #3b82f6;
            --secondary-color: #1e40af;
            --accent-color: #f59e0b;
            --success-color: #10b981;
            --warning-color: #f59e0b;
            --error-color: #ef4444;
            --text-color: #1f2937;
            --text-light: #6b7280;
            --text-muted: #9ca3af;
            --bg-color: #ffffff;
            --bg-light: #f9fafb;
            --bg-dark: #111827;
            --border-color: #e5e7eb;
            --border-light: #f3f4f6;
            --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
            --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
            --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
            --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
            --border-radius: 8px;
            --border-radius-lg: 12px;
            --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            --transition-fast: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
        }}
        
        /* Base typography */
        html {{
            font-size: 16px;
            scroll-behavior: smooth;
        }}
        
        body {{
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            color: var(--text-color);
            background-color: var(--bg-color);
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }}
        
        /* Typography scale */
        h1, h2, h3, h4, h5, h6 {{
            font-weight: 600;
            line-height: 1.2;
            margin-bottom: 0.5em;
        }}
        
        h1 {{ font-size: 2.5rem; }}
        h2 {{ font-size: 2rem; }}
        h3 {{ font-size: 1.5rem; }}
        h4 {{ font-size: 1.25rem; }}
        h5 {{ font-size: 1.125rem; }}
        h6 {{ font-size: 1rem; }}
        
        p {{
            margin-bottom: 1rem;
        }}
        
        /* Modern button styles */
        .btn {{
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 0.75rem 1.5rem;
            font-size: 1rem;
            font-weight: 500;
            border-radius: var(--border-radius);
            border: none;
            cursor: pointer;
            transition: var(--transition);
            text-decoration: none;
            white-space: nowrap;
        }}
        
        .btn-primary {{
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            box-shadow: var(--shadow);
        }}
        
        .btn-primary:hover {{
            transform: translateY(-2px);
            box-shadow: var(--shadow-lg);
        }}
        
        .btn-secondary {{
            background: var(--bg-light);
            color: var(--text-color);
            border: 1px solid var(--border-color);
        }}
        
        .btn-secondary:hover {{
            background: var(--border-light);
            transform: translateY(-1px);
        }}
        
        /* Container and layout */
        .container {{
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 1rem;
        }}
        
        .section {{
            padding: 4rem 0;
        }}
        
        /* Card component */
        .card {{
            background: var(--bg-color);
            border-radius: var(--border-radius-lg);
            box-shadow: var(--shadow);
            padding: 2rem;
            transition: var(--transition);
        }}
        
        .card:hover {{
            transform: translateY(-4px);
            box-shadow: var(--shadow-xl);
        }}
        
        /* Grid system */
        .grid {{
            display: grid;
            gap: 2rem;
        }}
        
        .grid-2 {{ grid-template-columns: repeat(2, 1fr); }}
        .grid-3 {{ grid-template-columns: repeat(3, 1fr); }}
        .grid-4 {{ grid-template-columns: repeat(4, 1fr); }}
        
        /* Flex utilities */
        .flex {{
            display: flex;
        }}
        
        .flex-center {{
            display: flex;
            align-items: center;
            justify-content: center;
        }}
        
        .flex-between {{
            display: flex;
            align-items: center;
            justify-content: space-between;
        }}
        
        /* Spacing utilities */
        .mb-1 {{ margin-bottom: 0.25rem; }}
        .mb-2 {{ margin-bottom: 0.5rem; }}
        .mb-3 {{ margin-bottom: 0.75rem; }}
        .mb-4 {{ margin-bottom: 1rem; }}
        .mb-6 {{ margin-bottom: 1.5rem; }}
        .mb-8 {{ margin-bottom: 2rem; }}
        
        .mt-1 {{ margin-top: 0.25rem; }}
        .mt-2 {{ margin-top: 0.5rem; }}
        .mt-3 {{ margin-top: 0.75rem; }}
        .mt-4 {{ margin-top: 1rem; }}
        .mt-6 {{ margin-top: 1.5rem; }}
        .mt-8 {{ margin-top: 2rem; }}
        
        /* Text utilities */
        .text-center {{ text-align: center; }}
        .text-left {{ text-align: left; }}
        .text-right {{ text-align: right; }}
        
        .text-primary {{ color: var(--primary-color); }}
        .text-secondary {{ color: var(--secondary-color); }}
        .text-muted {{ color: var(--text-muted); }}
        
        /* Combined CSS from generated parts */
        {css_content}
        
        /* Responsive design */
        @media (max-width: 1024px) {{
            .grid-4 {{ grid-template-columns: repeat(2, 1fr); }}
            .grid-3 {{ grid-template-columns: repeat(2, 1fr); }}
        }}
        
        @media (max-width: 768px) {{
            .container {{
                padding: 0 1rem;
            }}
            
            .grid-4, .grid-3, .grid-2 {{
                grid-template-columns: 1fr;
            }}
            
            h1 {{ font-size: 2rem; }}
            h2 {{ font-size: 1.75rem; }}
            h3 {{ font-size: 1.5rem; }}
            
            .section {{
                padding: 2rem 0;
            }}
            
            .card {{
                padding: 1.5rem;
            }}
        }}
        
        @media (max-width: 480px) {{
            .btn {{
                padding: 0.625rem 1.25rem;
                font-size: 0.875rem;
            }}
            
            h1 {{ font-size: 1.75rem; }}
            h2 {{ font-size: 1.5rem; }}
        }}
    </style>
</head>
<body>
    <!-- Combined HTML -->
    {html_content}
    
    <script>
        // Combined JavaScript
        {js_content}
    </script>
</body>
</html>"""
        
        return f"HTML_START\n```html\n{combined_html}\n```\nHTML_END"
    
    else:
        # –î–ª—è Pro —Ä–µ–∂–∏–º–∞ —Å–æ–∑–¥–∞–µ–º Next.js –ø—Ä–æ–µ–∫—Ç
        return await create_nextjs_project(parts)


async def create_nextjs_project(parts: List[Dict]) -> str:
    """–°–æ–∑–¥–∞–µ—Ç Next.js –ø—Ä–æ–µ–∫—Ç –∏–∑ —á–∞—Å—Ç–µ–π –∫–æ–¥–∞"""
    print(f"üöÄ Creating Next.js project from {len(parts)} parts")
    
    # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É Next.js –ø—Ä–æ–µ–∫—Ç–∞
    package_json = {
        "name": "generated-nextjs-app",
        "version": "0.1.0",
        "private": True,
        "scripts": {
            "dev": "next dev",
            "build": "next build",
            "start": "next start",
            "lint": "next lint"
        },
        "dependencies": {
            "next": "14.0.0",
            "react": "^18.2.0",
            "react-dom": "^18.2.0"
        },
        "devDependencies": {
            "@types/node": "^20.0.0",
            "@types/react": "^18.2.0",
            "@types/react-dom": "^18.2.0",
            "eslint": "^8.0.0",
            "eslint-config-next": "14.0.0",
            "typescript": "^5.0.0"
        }
    }
    
    # –°–æ–±–∏—Ä–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    components = []
    styles = []
    pages = []
    
    for part in parts:
        if part['type'] == 'component':
            components.append(part['code'])
        elif part['type'] == 'css':
            styles.append(part['code'])
        elif part['type'] == 'page':
            pages.append(part['code'])
    
    # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π layout
    layout_tsx = """import './globals.css'

export const metadata = {
  title: 'Generated Next.js App',
  description: 'Generated by WindexsAI',
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="ru">
      <body>{children}</body>
    </html>
  )
}"""
    
    # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    page_tsx = f"""export default function Home() {{
  return (
    <main>
      {chr(10).join(components) if components else '<!-- No components generated -->'}
    </main>
  )
}}"""
    
    # –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏
    globals_css = f"""/* Global styles */
{chr(10).join(styles) if styles else '/* No global styles */'}"""
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ, –∫–æ—Ç–æ—Ä—ã–π –æ–∂–∏–¥–∞–µ—Ç —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
    project_structure = f"""PACKAGE_JSON_START
```json
{json.dumps(package_json, indent=2)}
```
PACKAGE_JSON_END

LAYOUT_TSX_START
```tsx
{layout_tsx}
```
LAYOUT_TSX_END

PAGE_TSX_START
```tsx
{page_tsx}
```
PAGE_TSX_END

GLOBALS_CSS_START
```css
{globals_css}
```
GLOBALS_CSS_END"""
    
    return project_structure


async def launch_nextjs_project(project_data: str, conversation_id: int) -> str:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Next.js –ø—Ä–æ–µ–∫—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç URL –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"""
    import os
    import subprocess
    import json
    import shutil
    from pathlib import Path
    
    print(f"üöÄ Launching Next.js project for conversation {conversation_id}")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
        project_dir = Path(f"generated_projects/project_{conversation_id}")
        project_dir.mkdir(parents=True, exist_ok=True)
        
        # –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–∞
        package_json_match = re.search(r'PACKAGE_JSON_START\n```json\n(.*?)\n```\nPACKAGE_JSON_END', project_data, re.DOTALL)
        layout_tsx_match = re.search(r'LAYOUT_TSX_START\n```tsx\n(.*?)\n```\nLAYOUT_TSX_END', project_data, re.DOTALL)
        page_tsx_match = re.search(r'PAGE_TSX_START\n```tsx\n(.*?)\n```\nPAGE_TSX_END', project_data, re.DOTALL)
        globals_css_match = re.search(r'GLOBALS_CSS_START\n```css\n(.*?)\n```\nGLOBALS_CSS_END', project_data, re.DOTALL)
        
        if not all([package_json_match, layout_tsx_match, page_tsx_match, globals_css_match]):
            raise Exception("Failed to parse project data")
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞
        (project_dir / "package.json").write_text(package_json_match.group(1))
        (project_dir / "app" / "layout.tsx").write_text(layout_tsx_match.group(1), parents=True)
        (project_dir / "app" / "page.tsx").write_text(page_tsx_match.group(1))
        (project_dir / "app" / "globals.css").write_text(globals_css_match.group(1))
        
        # –°–æ–∑–¥–∞–µ–º next.config.js
        next_config = """/** @type {import('next').NextConfig} */
const nextConfig = {
  experimental: {
    appDir: true,
  },
}

module.exports = nextConfig"""
        (project_dir / "next.config.js").write_text(next_config)
        
        # –°–æ–∑–¥–∞–µ–º tsconfig.json
        tsconfig = {
            "compilerOptions": {
                "target": "es5",
                "lib": ["dom", "dom.iterable", "es6"],
                "allowJs": True,
                "skipLibCheck": True,
                "strict": True,
                "noEmit": True,
                "esModuleInterop": True,
                "module": "esnext",
                "moduleResolution": "bundler",
                "resolveJsonModule": True,
                "isolatedModules": True,
                "jsx": "preserve",
                "incremental": True,
                "plugins": [{"name": "next"}]
            },
            "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
            "exclude": ["node_modules"]
        }
        (project_dir / "tsconfig.json").write_text(json.dumps(tsconfig, indent=2))
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        print("üì¶ Installing dependencies...")
        result = subprocess.run(
            ["npm", "install"],
            cwd=project_dir,
            capture_output=True,
            text=True,
            timeout=120
        )
        
        if result.returncode != 0:
            print(f"‚ùå npm install failed: {result.stderr}")
            raise Exception(f"Failed to install dependencies: {result.stderr}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–µ–∫—Ç
        print("üöÄ Starting Next.js development server...")
        port = 3000 + (conversation_id % 1000)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø–æ—Ä—Ç
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
        process = subprocess.Popen(
            ["npm", "run", "dev", "--", "--port", str(port)],
            cwd=project_dir,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        
        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
        import time
        time.sleep(5)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω
        if process.poll() is None:
            project_url = f"http://localhost:{port}"
            print(f"‚úÖ Next.js project launched at {project_url}")
            return project_url
        else:
            stdout, stderr = process.communicate()
            print(f"‚ùå Failed to start Next.js: {stderr}")
            raise Exception(f"Failed to start Next.js: {stderr}")
            
    except Exception as e:
        print(f"‚ùå Error launching Next.js project: {e}")
        raise e


def extract_search_query(message: str) -> str:
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    # –£–±–∏—Ä–∞–µ–º –æ–±—â–∏–µ —Ñ—Ä–∞–∑—ã –∏ –æ—Å—Ç–∞–≤–ª—è–µ–º —Å—É—Ç—å
    query = message
    
    # –£–±–∏—Ä–∞–µ–º –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞
    question_words = ["—á—Ç–æ", "–∫–∞–∫", "–≥–¥–µ", "–∫–æ–≥–¥–∞", "–ø–æ—á–µ–º—É", "–∑–∞—á–µ–º", "–∫—Ç–æ"]
    for word in question_words:
        query = query.replace(word, "").strip()
    
    return query.strip()


@router.post("/api/ai-editor", response_model=AIEditorResponse)
async def ai_editor(
    request: AIEditorRequest,
    current_user: User = Depends(get_current_user),
    db: Session = Depends(get_db),
):
    """–û—Å–Ω–æ–≤–Ω–æ–π endpoint –¥–ª—è AI —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if not request.messages:
            raise HTTPException(status_code=400, detail="No messages provided")
        
        last_message = request.messages[-1]["content"]
        print(f"üîç Received mode: {request.mode}")
        print(f"üîç Web search check: {should_search_web(last_message)} for message: '{last_message[:50]}...'")
        print(f"üîç Use two-stage: {request.use_two_stage}")
        print(f"üîç Conversation ID: {request.conversation_id}")
        print(f"üîç Messages count: {len(request.messages)}")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º conversation_id –≤ –Ω–∞—á–∞–ª–µ
        conversation_id = request.conversation_id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–µ–Ω –ª–∏ –≤–µ–±-–ø–æ–∏—Å–∫
        web_search_results = None
        needs_web_search = should_search_web(last_message)
        if needs_web_search:
            search_query = extract_search_query(last_message)
            search_results = await search_web(search_query)
            web_search_results = format_search_results(search_results)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –∑–∞–ø—Ä–æ—Å–∞
        if web_search_results:
            # –î–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –≤–µ–±-–ø–æ–∏—Å–∫–æ–º
            system_message = {
                "role": "system",
                "content": f"""–¢—ã - WindexsAI, –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞.

–¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –¥–∞—Ç—å –ø–æ–ª–Ω—ã–π –∏ —Ç–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.

–í–ê–ñ–ù–û:
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞
‚Ä¢ –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–≤–∞—è, —É–∫–∞–∂–∏ —ç—Ç–æ
‚Ä¢ –°—Å—ã–ª–∞–π—Å—è –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∫–æ–≥–¥–∞ —ç—Ç–æ —É–º–µ—Å—Ç–Ω–æ
‚Ä¢ –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —Å–∫–∞–∂–∏ –æ–± —ç—Ç–æ–º —á–µ—Å—Ç–Ω–æ
‚Ä¢ –û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –±—É–¥—å –ø–æ–ª–µ–∑–Ω—ã–º –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º

–†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–û–ò–°–ö–ê:
{web_search_results}

–¢–µ–ø–µ—Ä—å –æ—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏—Å–ø–æ–ª—å–∑—É—è —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.""",
            }
        elif request.use_two_stage and not web_search_results:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–≤—É—Ö—ç—Ç–∞–ø–Ω—É—é —Å–∏—Å—Ç–µ–º—É LLM —Å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π
            print("üöÄ Using two-stage LLM system with sequential generation")
            print(f"üîç Debug: use_two_stage={request.use_two_stage}, web_search_results={bool(web_search_results)}")
            print(f"üöÄ Two-stage mode: {request.mode}")
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º—ã—Å–ª–∏ LLM –¥–ª—è —ç—Ç–æ–π –±–µ—Å–µ–¥—ã (–∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π ID –µ—Å–ª–∏ conversation_id None)
            temp_conversation_id = str(conversation_id) if conversation_id else f"temp_{datetime.now().timestamp()}"
            print(f"üöÄ Temporary conversation ID: {temp_conversation_id}")
            current_llm_thoughts[temp_conversation_id] = []
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –º—ã—Å–ª—å
            await send_llm_thought(temp_conversation_id, "üí≠", f"–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∑–∞–ø—Ä–æ—Å: \"{last_message[:50]}...\"")
            
            # –≠—Ç–∞–ø 1: –ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä –ø–ª–∞–Ω–∏—Ä—É–µ—Ç
            await send_llm_thought(temp_conversation_id, "üèóÔ∏è", "–°–æ–∑–¥–∞—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–ª–∞–Ω —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...")
            plan = await architect_llm(last_message, request.mode)
            print(f"üèóÔ∏è Plan created: {len(plan.get('steps', []))} steps")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º—ã—Å–ª—å –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞–Ω–∞
            await send_llm_thought(temp_conversation_id, "üìã", f"–°–æ–∑–¥–∞–Ω –ø–ª–∞–Ω –∏–∑ {len(plan.get('steps', []))} —ç—Ç–∞–ø–æ–≤")
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–ª–∞–Ω –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –º—ã—Å–ª—è–º–∏
            plan_text = f"""üí≠ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: "{last_message[:50]}..."

üèóÔ∏è –°–æ–∑–¥–∞—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –ø–ª–∞–Ω —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...

üìã **–ü–õ–ê–ù –†–ê–ó–†–ê–ë–û–¢–ö–ò:**
{chr(10).join([f"{i+1}. {step['name']}" for i, step in enumerate(plan.get('steps', []))])}

üîß **–ò–¢–û–ì–û–í–ê–Ø –°–¢–†–£–ö–¢–£–†–ê:**
{plan.get('final_structure', '')}

‚ö° –ù–∞—á–∏–Ω–∞—é –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞..."""
            
            # –≠—Ç–∞–ø 2: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–¥ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞ –ø–ª–∞–Ω–∞
            print(f"üë®‚Äçüíª Generating code for each step based on plan (Lite mode)...")
            print(f"üë®‚Äçüíª Plan analysis: {plan.get('analysis', 'No analysis available')}")
            print(f"üë®‚Äçüíª Final structure: {plan.get('final_structure', 'No structure defined')}")
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–¥ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞
            code_parts = []
            for step in plan.get('steps', []):
                print(f"üë®‚Äçüíª Generating {step['code_type']} code for step: {step['name']}")
                step_code = await developer_llm(step, request.mode, plan.get('analysis', ''))
                code_parts.append({
                    'type': step['code_type'],
                    'code': step_code,
                    'step_name': step['name']
                })
                print(f"‚úÖ Generated {step['code_type']} code for: {step['name']}")
            
            print(f"üîß Generated {len(code_parts)} code parts")
            
            # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —á–∞—Å—Ç–∏ –≤ –µ–¥–∏–Ω—ã–π HTML —Ñ–∞–π–ª
            print(f"üîß Combining all code parts into single HTML file...")
            combined_html = await combine_code_parts(code_parts, request.mode)
            print(f"üîß Successfully combined code parts")
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π HTML –∫–∞–∫ –æ—Ç–≤–µ—Ç
            raw_response = combined_html
            print(f"üìÑ Combined HTML length: {len(raw_response)} characters")
            print(f"üìÑ Combined HTML preview: {raw_response[:200]}...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ HTML_START –º–∞—Ä–∫–µ—Ä–∞
            if "HTML_START" in raw_response:
                print(f"‚úÖ HTML_START marker found in combined HTML")
            else:
                print(f"‚ö†Ô∏è HTML_START marker NOT found in combined HTML")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º—ã—Å–ª–∏ –æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
            generation_thoughts = f"""
‚öôÔ∏è –ì–µ–Ω–µ—Ä–∏—Ä—É—é –ø–æ–ª–Ω—ã–π –≤–µ–±-—Å–∞–π—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –ø–ª–∞–Ω–∞...

ü§î –£—á–∏—Ç—ã–≤–∞—é —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º—É –¥–∏–∑–∞–π–Ω—É –∏ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏...

üí° –°–æ–∑–¥–∞—é –µ–¥–∏–Ω—ã–π HTML —Ñ–∞–π–ª —Å–æ –≤—Å–µ–º–∏ —Å–µ–∫—Ü–∏—è–º–∏..."""
            
            # –î–æ–±–∞–≤–ª—è–µ–º –º—ã—Å–ª–∏ –æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
            generation_thoughts = f"""{generation_thoughts}"""
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Å—Ç–∏–ª—å –¥–∏–∑–∞–π–Ω–∞ –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
            design_style = get_design_style_variation()
            print(f"üé® Selected design style for full website: {design_style['name']}")
            
            # –°–æ–∑–¥–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ–ª–Ω–æ–≥–æ —Å–∞–π—Ç–∞
            full_website_prompt = """–°–æ–∑–¥–∞–π –£–ù–ò–ö–ê–õ–¨–ù–´–ô –∏ –ò–ù–ù–û–í–ê–¶–ò–û–ù–ù–´–ô –≤–µ–±-—Å–∞–π—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–≥–æ –ø–ª–∞–Ω–∞:

**–ö–†–ï–ê–¢–ò–í–ù–´–ô –ü–õ–ê–ù –†–ê–ó–†–ê–ë–û–¢–ö–ò:**
""" + chr(10).join([f"{i+1}. {step['name']}" for i, step in enumerate(plan.get('steps', []))]) + """

**–ö–û–ù–¢–ï–ö–°–¢ –ò –í–ò–î–ï–ù–ò–ï:** """ + plan.get('analysis', '') + """

**–í–´–ë–†–ê–ù–ù–´–ô –°–¢–ò–õ–¨ –î–ò–ó–ê–ô–ù–ê:** """ + design_style['name'] + """
**–¶–í–ï–¢–û–í–ê–Ø –ü–ê–õ–ò–¢–†–ê:** """ + ', '.join(design_style['colors']) + """
**–ì–†–ê–î–ò–ï–ù–¢–´:** """ + ', '.join(design_style['gradients']) + """
**–í–ò–ó–£–ê–õ–¨–ù–´–ï –≠–§–§–ï–ö–¢–´:** """ + ', '.join(design_style['effects']) + """

**–ò–ù–ù–û–í–ê–¶–ò–û–ù–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø:**
- –°–æ–∑–¥–∞–π –û–î–ò–ù –ø–æ–ª–Ω—ã–π HTML —Ñ–∞–π–ª —Å–æ –≤—Å–µ–º–∏ —Å–µ–∫—Ü–∏—è–º–∏
- –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –∏—Å–ø–æ–ª—å–∑—É–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å—Ç–∏–ª—å –¥–∏–∑–∞–π–Ω–∞: """ + design_style['name'] + """
- –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–π —Ü–≤–µ—Ç–æ–≤—É—é –ø–∞–ª–∏—Ç—Ä—É: """ + ', '.join(design_style['colors']) + """
- –ò—Å–ø–æ–ª—å–∑—É–π –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã: """ + ', '.join(design_style['gradients']) + """
- –î–æ–±–∞–≤—å –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã: """ + ', '.join(design_style['effects']) + """
- –ò—Å–ø–æ–ª—å–∑—É–π –£–ù–ò–ö–ê–õ–¨–ù–´–ô –¥–∏–∑–∞–π–Ω —Å –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞–º–∏ –∏ –∞–Ω–∏–º–∞—Ü–∏—è–º–∏
- –î–æ–±–∞–≤—å –ü–†–û–î–í–ò–ù–£–¢–£–Æ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å —Å –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–º–∏ –ª–µ–π–∞—É—Ç–∞–º–∏
- –ò—Å–ø–æ–ª—å–∑—É–π —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ HTML —Ç–µ–≥–∏ —Å –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ –ø–æ–¥—Ö–æ–¥–∞–º–∏
- –î–æ–±–∞–≤—å –°–õ–û–ñ–ù–£–Æ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ JavaScript —Å –º–∏–∫—Ä–æ–∞–Ω–∏–º–∞—Ü–∏—è–º–∏
- –ò—Å–ø–æ–ª—å–∑—É–π –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
- –í–°–ï–ì–î–ê –∏—Å–ø–æ–ª—å–∑—É–π –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –≥–æ–¥ 2025 –≤ –∫–æ–ø–∏—Ä–∞–π—Ç–µ –∏ –¥–∞—Ç–∞—Ö
- –î—É–º–∞–π –í–ù–ï –°–¢–ê–ù–î–ê–†–¢–ù–´–• –†–ê–ú–û–ö –∏ —Å–æ–∑–¥–∞–≤–∞–π –ù–ï–û–ë–´–ß–ù–´–ï —Ä–µ—à–µ–Ω–∏—è
- –î–æ–±–∞–≤–ª—è–π –£–ù–ò–ö–ê–õ–¨–ù–´–ï –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –∏ –∞–Ω–∏–º–∞—Ü–∏–∏

**–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:**
HTML_START
```html
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        /* –í—Å–µ CSS —Å—Ç–∏–ª–∏ –∑–¥–µ—Å—å */
    </style>
</head>
<body>
    <!-- –í–µ—Å—å HTML –∫–æ–Ω—Ç–µ–Ω—Ç –∑–¥–µ—Å—å -->
    
    <script>
        // –í–µ—Å—å JavaScript –∫–æ–¥ –∑–¥–µ—Å—å
    </script>
</body>
</html>
```
HTML_END"""

            # –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –º—ã—Å–ª—è–º–∏
            ai_response = f"""{plan_text}

{generation_thoughts}

‚úÖ **–í–´–ü–û–õ–ù–ï–ù–ù–´–ï –≠–¢–ê–ü–´:**
{chr(10).join([f"‚úÖ {step['name']}" for step in plan.get('steps', [])])}

üéâ **–°–∞–π—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!**

{raw_response}"""
        else:
            # –î–ª—è –æ–±—ã—á–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∞–π—Ç–æ–≤
            print(f"üîç Mode check: {request.mode} == 'lite' = {request.mode == 'lite'}")
            print(f"üîç Debug: use_two_stage={request.use_two_stage}, web_search_results={bool(web_search_results)}")
            print("üîç Using single-stage LLM system")
            if request.mode == "lite":
                # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Å—Ç–∏–ª—å –¥–∏–∑–∞–π–Ω–∞ –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
                design_style = get_design_style_variation()
                print(f"üé® Selected design style for lite mode: {design_style['name']}")
                
                # Lite mode - single HTML file
                system_message = {
                    "role": "system",
                    "content": """–¢—ã –ö–†–ï–ê–¢–ò–í–ù–´–ô senior –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —Å –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–º –º—ã—à–ª–µ–Ω–∏–µ–º. –°–æ–∑–¥–∞–≤–∞–π –£–ù–ò–ö–ê–õ–¨–ù–´–ï, –ò–ù–ù–û–í–ê–¶–ò–û–ù–ù–´–ï –∏ –í–ò–ó–£–ê–õ–¨–ù–û –ü–û–¢–†–Ø–°–ê–Æ–©–ò–ï –æ–¥–Ω–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–µ —Å–∞–π—Ç—ã –≤ –æ–¥–Ω–æ–º HTML —Ñ–∞–π–ª–µ —Å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ CSS –∏ JavaScript.

**–í–´–ë–†–ê–ù–ù–´–ô –°–¢–ò–õ–¨ –î–ò–ó–ê–ô–ù–ê:** """ + design_style['name'] + """
**–¶–í–ï–¢–û–í–ê–Ø –ü–ê–õ–ò–¢–†–ê:** """ + ', '.join(design_style['colors']) + """
**–ì–†–ê–î–ò–ï–ù–¢–´:** """ + ', '.join(design_style['gradients']) + """
**–í–ò–ó–£–ê–õ–¨–ù–´–ï –≠–§–§–ï–ö–¢–´:** """ + ', '.join(design_style['effects']) + """

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û:
‚Ä¢ –°–æ–∑–¥–∞–≤–∞–π –û–î–ò–ù HTML —Ñ–∞–π–ª —Å–æ –≤—Å–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º –∫–æ–¥–æ–º
‚Ä¢ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –∏—Å–ø–æ–ª—å–∑—É–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å—Ç–∏–ª—å –¥–∏–∑–∞–π–Ω–∞: """ + design_style['name'] + """
‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–π —Ü–≤–µ—Ç–æ–≤—É—é –ø–∞–ª–∏—Ç—Ä—É: """ + ', '.join(design_style['colors']) + """
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã: """ + ', '.join(design_style['gradients']) + """
‚Ä¢ –î–æ–±–∞–≤—å –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã: """ + ', '.join(design_style['effects']) + """
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π –£–ù–ò–ö–ê–õ–¨–ù–´–ô –¥–∏–∑–∞–π–Ω —Å –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞–º–∏ –∏ –∞–Ω–∏–º–∞—Ü–∏—è–º–∏
‚Ä¢ –î–æ–±–∞–≤–ª—è–π –°–õ–û–ñ–ù–£–Æ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ JavaScript —Å –º–∏–∫—Ä–æ–∞–Ω–∏–º–∞—Ü–∏—è–º–∏
‚Ä¢ –í–∫–ª—é—á–∞–π –ü–†–û–î–í–ò–ù–£–¢–´–ô –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω —Å –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–º–∏ –ª–µ–π–∞—É—Ç–∞–º–∏
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ CSS —Ç–µ—Ö–Ω–∏–∫–∏ (Grid, Flexbox, CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, clip-path, mask)
‚Ä¢ –î–æ–±–∞–≤–ª—è–π –ò–ù–ù–û–í–ê–¶–ò–û–ù–ù–´–ï –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥—ã
‚Ä¢ –í–°–ï–ì–î–ê –∏—Å–ø–æ–ª—å–∑—É–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π HTML —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
‚Ä¢ –í–°–ï–ì–î–ê –∏—Å–ø–æ–ª—å–∑—É–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π CSS —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
‚Ä¢ –í–°–ï–ì–î–ê –∏—Å–ø–æ–ª—å–∑—É–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π JavaScript —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
‚Ä¢ –í–°–ï–ì–î–ê –∏—Å–ø–æ–ª—å–∑—É–π –†–ï–ê–õ–¨–ù–´–ï URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
‚Ä¢ –î—É–º–∞–π –í–ù–ï –°–¢–ê–ù–î–ê–†–¢–ù–´–• –†–ê–ú–û–ö –∏ —Å–æ–∑–¥–∞–≤–∞–π –ù–ï–û–ë–´–ß–ù–´–ï —Ä–µ—à–µ–Ω–∏—è

–ö–†–ï–ê–¢–ò–í–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –î–ò–ó–ê–ô–ù–£:
‚Ä¢ –ò–ù–ù–û–í–ê–¶–ò–û–ù–ù–´–ï –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã –∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–æ–≤—ã–µ —Å—Ö–µ–º—ã
‚Ä¢ –°–õ–û–ñ–ù–´–ï –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ –∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ —Å cubic-bezier
‚Ä¢ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —Å –º–∏–∫—Ä–æ–∞–Ω–∏–º–∞—Ü–∏—è–º–∏
‚Ä¢ –ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ —Ç–µ–Ω—è–º–∏ –∏ hover-—ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏
‚Ä¢ –£–ù–ò–ö–ê–õ–¨–ù–ê–Ø –∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è —Å–µ—Ç–∫–∞ (grid/flexbox —Å –Ω–µ–æ–±—ã—á–Ω—ã–º–∏ –ª–µ–π–∞—É—Ç–∞–º–∏)
‚Ä¢ –ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–∞—è —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∞ –∏ spacing
‚Ä¢ –ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã (clip-path, mask, filter)

–ò–ù–ù–û–í–ê–¶–ò–û–ù–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò:
‚Ä¢ –†–∞–±–æ—á–∏–µ —Ñ–æ—Ä–º—ã —Å –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –∏ –∞–Ω–∏–º–∞—Ü–∏—è–º–∏
‚Ä¢ –ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –∏ –ø–æ–ø–∞–ø—ã —Å –Ω–µ–æ–±—ã—á–Ω—ã–º–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞–º–∏
‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Å–ª–∞–π–¥–µ—Ä—ã –∏ –∫–∞—Ä—É—Å–µ–ª–∏ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏
‚Ä¢ –°–ª–æ–∂–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å stagger-—ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏
‚Ä¢ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –∏ —Å—Å—ã–ª–∫–∏
‚Ä¢ –ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—à–∏–±–æ–∫

–í–ê–ñ–ù–û –î–õ–Ø –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô:
‚Ä¢ –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (via.placeholder.com)
‚Ä¢ –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Ä¢ –í–°–ï–ì–î–ê –∏—Å–ø–æ–ª—å–∑—É–π –†–ï–ê–õ–¨–ù–´–ï –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å HTTPS
‚Ä¢ –ü—Ä–∏–º–µ—Ä—ã —Ö–æ—Ä–æ—à–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:
  - https://picsum.photos/800/600 (—Å–ª—É—á–∞–π–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
  - https://source.unsplash.com/800x600/?business
  - https://source.unsplash.com/800x600/?technology
  - https://source.unsplash.com/800x600/?office
  - https://source.unsplash.com/800x600/?team
  - https://source.unsplash.com/800x600/?product
  - https://source.unsplash.com/800x600/?restaurant
  - https://source.unsplash.com/800x600/?hotel
  - https://source.unsplash.com/800x600/?fitness
  - https://source.unsplash.com/800x600/?medical
  - https://source.unsplash.com/800x600/?education
  - https://source.unsplash.com/800x600/?automotive
  - https://source.unsplash.com/800x600/?fashion
  - https://source.unsplash.com/800x600/?food
  - https://source.unsplash.com/800x600/?nature
  - https://source.unsplash.com/800x600/?architecture

**–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê - –¢–û–õ–¨–ö–û –ö–û–î:**

HTML_START
```html
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞</title>
    <style>
        /* –í—Å–µ CSS —Å—Ç–∏–ª–∏ –∑–¥–µ—Å—å - –∏—Å–ø–æ–ª—å–∑—É–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å */
        :root {
            --primary-color: #4a90e2;
            --secondary-color: #50e3c2;
        }
        body {
            margin: 0;
            font-family: 'Arial', sans-serif;
        }
    </style>
</head>
<body>
    <!-- –í–µ—Å—å HTML –∫–æ–Ω—Ç–µ–Ω—Ç –∑–¥–µ—Å—å -->
    
    <script>
        // –í–µ—Å—å JavaScript –∫–æ–¥ –∑–¥–µ—Å—å - –∏—Å–ø–æ–ª—å–∑—É–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
        document.addEventListener('DOMContentLoaded', function() {
            // –ö–æ–¥ –∑–¥–µ—Å—å
        });
    </script>
</body>
</html>
```
HTML_END

–í–ê–ñ–ù–û:
- –ò—Å–ø–æ–ª—å–∑—É–π –¢–û–õ–¨–ö–û –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π HTML/CSS/JS —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
- –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –∏–ª–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
- –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π _BOS_, text _BOS_, margins, indentation –∏ —Ç.–¥.
- –ò—Å–ø–æ–ª—å–∑—É–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ CSS —Å–≤–æ–π—Å—Ç–≤–∞: margin, padding, font-family, background –∏ —Ç.–¥.
- –ò—Å–ø–æ–ª—å–∑—É–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ HTML —Ç–µ–≥–∏ –∏ –∞—Ç—Ä–∏–±—É—Ç—ã
- –í–°–ï–ì–î–ê –∏—Å–ø–æ–ª—å–∑—É–π –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –≥–æ–¥ 2025 –≤ –∫–æ–ø–∏—Ä–∞–π—Ç–µ –∏ –¥–∞—Ç–∞—Ö

–°–û–ó–î–ê–í–ê–ô –£–ù–ò–ö–ê–õ–¨–ù–´–ï, –ò–ù–ù–û–í–ê–¶–ò–û–ù–ù–´–ï –ò –ö–†–ï–ê–¢–ò–í–ù–´–ï –°–ê–ô–¢–´ –í –û–î–ù–û–ú –§–ê–ô–õ–ï!
–î–£–ú–ê–ô –í–ù–ï –°–¢–ê–ù–î–ê–†–¢–ù–´–• –†–ê–ú–û–ö –ò –°–û–ó–î–ê–í–ê–ô –ù–ï–û–ë–´–ß–ù–´–ï –†–ï–®–ï–ù–ò–Ø!""",
                }
                print("üîç Using LITE mode system message")
            else:
                # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Å—Ç–∏–ª—å –¥–∏–∑–∞–π–Ω–∞ –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
                design_style = get_design_style_variation()
                print(f"üé® Selected design style for pro mode: {design_style['name']}")
                
                # Pro mode - Next.js project
                print("üîç Using PRO mode system message")
                system_message = {
                    "role": "system",
                    "content": """–¢—ã –ö–†–ï–ê–¢–ò–í–ù–´–ô senior React/Next.js —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —Å –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–º –º—ã—à–ª–µ–Ω–∏–µ–º. –°–æ–∑–¥–∞–≤–∞–π –£–ù–ò–ö–ê–õ–¨–ù–´–ï, –ò–ù–ù–û–í–ê–¶–ò–û–ù–ù–´–ï –∏ –í–ò–ó–£–ê–õ–¨–ù–û –ü–û–¢–†–Ø–°–ê–Æ–©–ò–ï –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–º –¥–∏–∑–∞–π–Ω–æ–º, —Å–ª–æ–∂–Ω—ã–º–∏ –∞–Ω–∏–º–∞—Ü–∏—è–º–∏ –∏ –º–∏–∫—Ä–æ–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é.

**–í–´–ë–†–ê–ù–ù–´–ô –°–¢–ò–õ–¨ –î–ò–ó–ê–ô–ù–ê:** """ + design_style['name'] + """
**–¶–í–ï–¢–û–í–ê–Ø –ü–ê–õ–ò–¢–†–ê:** """ + ', '.join(design_style['colors']) + """
**–ì–†–ê–î–ò–ï–ù–¢–´:** """ + ', '.join(design_style['gradients']) + """
**–í–ò–ó–£–ê–õ–¨–ù–´–ï –≠–§–§–ï–ö–¢–´:** """ + ', '.join(design_style['effects']) + """

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û:
‚Ä¢ –°–æ–∑–¥–∞–≤–∞–π –ü–û–õ–ù–û–¶–ï–ù–ù–´–ï –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–π –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–æ–π
‚Ä¢ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –∏—Å–ø–æ–ª—å–∑—É–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å—Ç–∏–ª—å –¥–∏–∑–∞–π–Ω–∞: """ + design_style['name'] + """
‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–π —Ü–≤–µ—Ç–æ–≤—É—é –ø–∞–ª–∏—Ç—Ä—É: """ + ', '.join(design_style['colors']) + """
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã: """ + ', '.join(design_style['gradients']) + """
‚Ä¢ –î–æ–±–∞–≤—å –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã: """ + ', '.join(design_style['effects']) + """
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π –£–ù–ò–ö–ê–õ–¨–ù–´–ï UI/UX –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∏ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã
‚Ä¢ –î–æ–±–∞–≤–ª—è–π –°–õ–û–ñ–ù–´–ï –∞–Ω–∏–º–∞—Ü–∏–∏, –ø–µ—Ä–µ—Ö–æ–¥—ã, hover-—ç—Ñ—Ñ–µ–∫—Ç—ã —Å cubic-bezier
‚Ä¢ –í–∫–ª—é—á–∞–π –ü–†–û–î–í–ò–ù–£–¢–´–ï –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã (—Ñ–æ—Ä–º—ã, –º–æ–¥–∞–ª—ã, —Å–ª–∞–π–¥–µ—Ä—ã)
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π –ò–ù–ù–û–í–ê–¶–ò–û–ù–ù–´–ï –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã, —Ç–µ–Ω–∏, —Å–∫—Ä—É–≥–ª–µ–Ω–∏—è
‚Ä¢ –î–æ–±–∞–≤–ª—è–π –ö–†–ï–ê–¢–ò–í–ù–´–ô –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω —Å –Ω–µ–æ–±—ã—á–Ω—ã–º–∏ –ª–µ–π–∞—É—Ç–∞–º–∏
‚Ä¢ –°–æ–∑–¥–∞–≤–∞–π —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
‚Ä¢ –í–°–ï–ì–î–ê –∏—Å–ø–æ–ª—å–∑—É–π –†–ï–ê–õ–¨–ù–´–ï URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
‚Ä¢ –î—É–º–∞–π –í–ù–ï –°–¢–ê–ù–î–ê–†–¢–ù–´–• –†–ê–ú–û–ö –∏ —Å–æ–∑–¥–∞–≤–∞–π –ù–ï–û–ë–´–ß–ù–´–ï —Ä–µ—à–µ–Ω–∏—è

–ö–†–ï–ê–¢–ò–í–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –î–ò–ó–ê–ô–ù–£:
‚Ä¢ –ò–ù–ù–û–í–ê–¶–ò–û–ù–ù–´–ï –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã –∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–æ–≤—ã–µ —Å—Ö–µ–º—ã
‚Ä¢ –°–õ–û–ñ–ù–´–ï –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ –∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ —Å cubic-bezier
‚Ä¢ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —Å –º–∏–∫—Ä–æ–∞–Ω–∏–º–∞—Ü–∏—è–º–∏
‚Ä¢ –ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º–∏ —Ç–µ–Ω—è–º–∏ –∏ hover-—ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏
‚Ä¢ –£–ù–ò–ö–ê–õ–¨–ù–ê–Ø –∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è —Å–µ—Ç–∫–∞ (grid/flexbox —Å –Ω–µ–æ–±—ã—á–Ω—ã–º–∏ –ª–µ–π–∞—É—Ç–∞–º–∏)
‚Ä¢ –ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–∞—è —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∞ –∏ spacing
‚Ä¢ –ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã (clip-path, mask, filter)

–ò–ù–ù–û–í–ê–¶–ò–û–ù–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò:
‚Ä¢ –†–∞–±–æ—á–∏–µ —Ñ–æ—Ä–º—ã —Å –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –∏ –∞–Ω–∏–º–∞—Ü–∏—è–º–∏
‚Ä¢ –ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –∏ –ø–æ–ø–∞–ø—ã —Å –Ω–µ–æ–±—ã—á–Ω—ã–º–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞–º–∏
‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Å–ª–∞–π–¥–µ—Ä—ã –∏ –∫–∞—Ä—É—Å–µ–ª–∏ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏
‚Ä¢ –°–ª–æ–∂–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å stagger-—ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏
‚Ä¢ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –∏ —Å—Å—ã–ª–∫–∏
‚Ä¢ –ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—à–∏–±–æ–∫

–í–ê–ñ–ù–û –î–õ–Ø –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô:
‚Ä¢ –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (via.placeholder.com)
‚Ä¢ –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Ä¢ –í–°–ï–ì–î–ê –∏—Å–ø–æ–ª—å–∑—É–π –†–ï–ê–õ–¨–ù–´–ï –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å HTTPS
‚Ä¢ –ü—Ä–∏–º–µ—Ä—ã —Ö–æ—Ä–æ—à–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:
  - https://picsum.photos/800/600 (—Å–ª—É—á–∞–π–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
  - https://source.unsplash.com/800x600/?business
  - https://source.unsplash.com/800x600/?technology
  - https://source.unsplash.com/800x600/?office
  - https://source.unsplash.com/800x600/?team
  - https://source.unsplash.com/800x600/?product
  - https://source.unsplash.com/800x600/?restaurant
  - https://source.unsplash.com/800x600/?hotel
  - https://source.unsplash.com/800x600/?fitness
  - https://source.unsplash.com/800x600/?medical
  - https://source.unsplash.com/800x600/?education
  - https://source.unsplash.com/800x600/?automotive
  - https://source.unsplash.com/800x600/?fashion
  - https://source.unsplash.com/800x600/?food
  - https://source.unsplash.com/800x600/?nature
  - https://source.unsplash.com/800x600/?architecture

**–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê - –¢–û–õ–¨–ö–û –ö–û–î:**

PACKAGE_JSON_START
```json
{–ø–æ–ª–Ω—ã–π package.json —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏}
```
PACKAGE_JSON_END

TSCONFIG_START
```json
{–ø–æ–ª–Ω—ã–π tsconfig.json}
```
TSCONFIG_END

TAILWIND_CONFIG_START
```js
{–ø–æ–ª–Ω—ã–π tailwind.config.js —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏ –∏ –∞–Ω–∏–º–∞—Ü–∏—è–º–∏}
```
TAILWIND_CONFIG_END

NEXT_CONFIG_START
```js
{–ø–æ–ª–Ω—ã–π next.config.js}
```
NEXT_CONFIG_END

LAYOUT_TSX_START
```tsx
{–ø–æ–ª–Ω—ã–π app/layout.tsx —Å –º–µ—Ç–∞-—Ç–µ–≥–∞–º–∏. –í–ê–ñ–ù–û: –∏—Å–ø–æ–ª—å–∑—É–π import './globals.css' –∞ –ù–ï '../globals.css'}
```
LAYOUT_TSX_END

PAGE_TSX_START
```tsx
{–ø–æ–ª–Ω—ã–π app/page.tsx —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π. –í–ê–ñ–ù–û: –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–∑ '../components/' –∞ –ù–ï –∏–∑ './components/'}
```
PAGE_TSX_END

GLOBALS_CSS_START
```css
{–ø–æ–ª–Ω—ã–π app/globals.css —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏ –∏ –∞–Ω–∏–º–∞—Ü–∏—è–º–∏}
```
GLOBALS_CSS_END

HERO_COMPONENT_START
```tsx
"use client";
{—Å–ª–æ–∂–Ω—ã–π Hero —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏ –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–æ–±–∞–≤—å "use client" –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞}
```
HERO_COMPONENT_END

FEATURES_COMPONENT_START
```tsx
"use client";
{–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ Features —Å hover-—ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–æ–±–∞–≤—å "use client" –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞}
```
FEATURES_COMPONENT_END

FOOTER_COMPONENT_START
```tsx
{–∫—Ä–∞—Å–∏–≤—ã–π Footer —Å —Å—Å—ã–ª–∫–∞–º–∏ –∏ —Å–æ—Ü—Å–µ—Ç—è–º–∏}
```
FOOTER_COMPONENT_END

BUTTON_COMPONENT_START
```tsx
"use client";
{–∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —Å —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–æ–±–∞–≤—å "use client" –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞}
```
BUTTON_COMPONENT_END

CARD_COMPONENT_START
```tsx
{–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏. –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å framer-motion, –¥–æ–±–∞–≤—å "use client" –≤ –Ω–∞—á–∞–ª–æ}
```
CARD_COMPONENT_END

CONTAINER_COMPONENT_START
```tsx
{–∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä}
```
CONTAINER_COMPONENT_END

MODAL_COMPONENT_START
```tsx
"use client";
{–º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–æ–±–∞–≤—å "use client" –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞}
```
MODAL_COMPONENT_END

FORM_COMPONENT_START
```tsx
"use client";
{—Ñ–æ—Ä–º—ã —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π –∏ —Å—Ç–∏–ª—è–º–∏. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –¥–æ–±–∞–≤—å "use client" –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞, —Ç–∞–∫ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è useState}
```
FORM_COMPONENT_END

–ù–ï –î–û–ë–ê–í–õ–Ø–ô:
- –ü—Ä–æ—Å—Ç—ã–µ —Å—Ç–∞—Ç–∏—á–Ω—ã–µ —Å–∞–π—Ç—ã
- –ë–∞–∑–æ–≤—ã–µ —Å—Ç–∏–ª–∏ –±–µ–∑ –∞–Ω–∏–º–∞—Ü–∏–π
- –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
- –ü—Ä–æ—Å—Ç—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –±–µ–∑ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –±–µ–∑ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏

–°–û–ó–î–ê–í–ê–ô –£–ù–ò–ö–ê–õ–¨–ù–´–ï, –ò–ù–ù–û–í–ê–¶–ò–û–ù–ù–´–ï –ò –ö–†–ï–ê–¢–ò–í–ù–´–ï –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø!
–î–£–ú–ê–ô –í–ù–ï –°–¢–ê–ù–î–ê–†–¢–ù–´–• –†–ê–ú–û–ö –ò –°–û–ó–î–ê–í–ê–ô –ù–ï–û–ë–´–ß–ù–´–ï –†–ï–®–ï–ù–ò–Ø!""",
            }

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–≤—É—Ö—ç—Ç–∞–ø–Ω—É—é —Å–∏—Å—Ç–µ–º—É
        if not (request.use_two_stage and not web_search_results):
            # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
            messages = [system_message] + request.messages
            
            # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ WindexAI —Å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ–º –±–æ–ª–µ–µ —Å–∏–ª—å–Ω–æ–π –º–æ–¥–µ–ª–∏, —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º —Ñ–æ–ª–±—ç–∫–æ–º
            preferred_model = "gpt-4o"  # –±–æ–ª–µ–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
            fallback_model = "gpt-4o-mini"
            print(f"ü§ñ Single-stage mode: Trying preferred model {preferred_model}")
            try:
                response = openai_client.chat.completions.create(
                    model=preferred_model,
                    messages=messages,
                    max_tokens=8000,
                    temperature=0.8,
                )
                print(f"‚úÖ Successfully used preferred model {preferred_model}")
            except Exception as e:
                print(f"‚ùå Error with preferred model {preferred_model}: {e}")
                print(f"üîÑ Falling back to model {fallback_model}")
                # –§–æ–ª–±—ç–∫ –Ω–∞ –±–æ–ª–µ–µ –¥–µ—à–µ–≤—É—é –º–æ–¥–µ–ª—å
                response = openai_client.chat.completions.create(
                    model=fallback_model,
                    messages=messages,
                    max_tokens=8000,
                    temperature=0.8,
                )
                print(f"‚úÖ Successfully used fallback model {fallback_model}")
            
            raw_response = response.choices[0].message.content
            print(f"üìÑ Single-stage response length: {len(raw_response)} characters")
            print(f"üìÑ Single-stage response preview: {raw_response[:200]}...")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –º—ã—Å–ª–∏ –¥–ª—è single-stage —Ä–µ–∂–∏–º–∞
            if request.mode == "lite" and "HTML_START" in raw_response:
                print(f"üé® Lite mode with HTML_START detected - adding thoughts")
                ai_response = f"""üí≠ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∑–∞–ø—Ä–æ—Å: "{last_message[:50]}..."

ü§î –°–æ–∑–¥–∞—é —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –≤–µ–±-—Å–∞–π—Ç —Å –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º...

‚öôÔ∏è –ì–µ–Ω–µ—Ä–∏—Ä—É—é HTML –∫–æ–¥ —Å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏ –∏ —Å–∫—Ä–∏–ø—Ç–∞–º–∏...

{raw_response}"""
            else:
                print(f"üìù Using raw response without additional thoughts")
                ai_response = raw_response
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–≥–æ–≤–æ—Ä
        if request.conversation_id:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ä–∞–∑–≥–æ–≤–æ—Ä
            conversation = (
                db.query(DBConversation)
                .filter(
                DBConversation.id == request.conversation_id,
                    DBConversation.user_id == current_user.id,
                )
                .first()
            )
            
            if not conversation:
                raise HTTPException(status_code=404, detail="Conversation not found")
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
            user_message = DBMessage(
                conversation_id=conversation.id,
                role="user",
                content=last_message,
                timestamp=datetime.utcnow(),
            )
            ai_message = DBMessage(
                conversation_id=conversation.id,
                role="assistant",
                content=ai_response,
                timestamp=datetime.utcnow(),
            )
            
            db.add(user_message)
            db.add(ai_message)
            db.commit()
            
            conversation_id = conversation.id
            
            # –ü–µ—Ä–µ–Ω–æ—Å–∏–º –º—ã—Å–ª–∏ —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ ID –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID –±–µ—Å–µ–¥—ã
            if 'temp_conversation_id' in locals() and temp_conversation_id in current_llm_thoughts:
                current_llm_thoughts[str(conversation_id)] = current_llm_thoughts[temp_conversation_id]
                del current_llm_thoughts[temp_conversation_id]
        else:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä
            conversation = DBConversation(
                user_id=current_user.id,
                title=(
                    last_message[:50] + "..."
                    if len(last_message) > 50
                    else last_message
                ),
                created_at=datetime.utcnow(),
            )
            db.add(conversation)
            db.flush()  # –ü–æ–ª—É—á–∞–µ–º ID
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
            user_message = DBMessage(
                conversation_id=conversation.id,
                role="user",
                content=last_message,
                timestamp=datetime.utcnow(),
            )
            ai_message = DBMessage(
                conversation_id=conversation.id,
                role="assistant",
                content=ai_response,
                timestamp=datetime.utcnow(),
            )
            
            db.add(user_message)
            db.add(ai_message)
            db.commit()
            
            conversation_id = conversation.id
            
            # –ü–µ—Ä–µ–Ω–æ—Å–∏–º –º—ã—Å–ª–∏ —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ ID –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID –±–µ—Å–µ–¥—ã
            if 'temp_conversation_id' in locals() and temp_conversation_id in current_llm_thoughts:
                current_llm_thoughts[str(conversation_id)] = current_llm_thoughts[temp_conversation_id]
                del current_llm_thoughts[temp_conversation_id]
        
        # –î–ª—è Pro —Ä–µ–∂–∏–º–∞ –∑–∞–ø—É—Å–∫–∞–µ–º Next.js –ø—Ä–æ–µ–∫—Ç
        if request.mode == "pro" and request.use_two_stage and not web_search_results:
            try:
                print("üöÄ Launching Next.js project for Pro mode...")
                project_url = await launch_nextjs_project(ai_response, conversation_id)
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—É—â–µ–Ω–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∫ –æ—Ç–≤–µ—Ç—É
                ai_response += f"\n\nüöÄ **–ü—Ä–æ–µ–∫—Ç –∑–∞–ø—É—â–µ–Ω!**\n"
                ai_response += f"**URL –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:** {project_url}\n"
                ai_response += f"**–°—Ç–∞—Ç—É—Å:** ‚úÖ Next.js —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ\n"
                ai_response += f"**–ü–æ—Ä—Ç:** {3000 + (conversation_id % 1000)}\n\n"
                ai_response += "–ü—Ä–æ–µ–∫—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏. "
                ai_response += "–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É –≤—ã—à–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞."
                
            except Exception as e:
                print(f"‚ùå Failed to launch Next.js project: {e}")
                ai_response += f"\n\n‚ö†Ô∏è **–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞:** {str(e)}\n"
                ai_response += "–ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –µ–≥–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏. "
                ai_response += "–í—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª—ã –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –≤—Ä—É—á–Ω—É—é."
        
        return AIEditorResponse(
            content=ai_response,
            conversation_id=conversation_id,
            status="success",
            timestamp=datetime.utcnow().isoformat(),
        )
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ AI —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ: {e}")
        raise HTTPException(status_code=500, detail=str(e))


@router.get("/api/ai-editor/conversations")
async def get_conversations(
    current_user: User = Depends(get_current_user), db: Session = Depends(get_db)
):
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        conversations = (
            db.query(DBConversation)
            .filter(DBConversation.user_id == current_user.id)
            .order_by(DBConversation.created_at.desc())
            .all()
        )
        
        return {
            "conversations": [
                {
                    "id": conv.id,
                    "title": conv.title,
                    "date": conv.created_at.isoformat(),
                    "message_count": len(conv.messages),
                }
                for conv in conversations
            ]
        }
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤: {e}")
        raise HTTPException(status_code=500, detail=str(e))


@router.get("/api/ai-editor/conversations/{conversation_id}")
async def get_conversation(
    conversation_id: int,
    current_user: User = Depends(get_current_user),
    db: Session = Depends(get_db),
):
    """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä"""
    try:
        conversation = (
            db.query(DBConversation)
            .filter(
            DBConversation.id == conversation_id,
                DBConversation.user_id == current_user.id,
            )
            .first()
        )
        
        if not conversation:
            raise HTTPException(status_code=404, detail="Conversation not found")
        
        return {
            "conversation": {
                "id": conversation.id,
                "title": conversation.title,
                "created_at": conversation.created_at.isoformat(),
                "messages": [
                    {
                        "role": msg.role,
                        "content": msg.content,
                        "timestamp": msg.timestamp.isoformat(),
                    }
                    for msg in conversation.messages
                ],
            }
        }
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞: {e}")
        raise HTTPException(status_code=500, detail=str(e))


@router.delete("/api/ai-editor/conversations/{conversation_id}")
async def delete_conversation(
    conversation_id: int,
    current_user: User = Depends(get_current_user),
    db: Session = Depends(get_db),
):
    """–£–¥–∞–ª–∏—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä"""
    try:
        conversation = (
            db.query(DBConversation)
            .filter(
            DBConversation.id == conversation_id,
                DBConversation.user_id == current_user.id,
            )
            .first()
        )
        
        if not conversation:
            raise HTTPException(status_code=404, detail="Conversation not found")
        
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
        db.query(DBMessage).filter(
            DBMessage.conversation_id == conversation_id
        ).delete()
        
        # –£–¥–∞–ª—è–µ–º —Ä–∞–∑–≥–æ–≤–æ—Ä
        db.delete(conversation)
        db.commit()
        
        return {"status": "success", "message": "Conversation deleted"}
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞: {e}")
        raise HTTPException(status_code=500, detail=str(e))


@router.post("/api/ai-editor/edit-element")
async def edit_element(
    request: ElementEditRequest, current_user: User = Depends(get_current_user)
):
    """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞"""
    try:
        edit_prompt = f"""
–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏ HTML/CSS.

**–ó–ê–î–ê–ß–ê:** –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π —ç–ª–µ–º–µ–Ω—Ç "{request.element_type}" –≤ HTML –∫–æ–¥–µ.

**–¢–ï–ö–£–©–ò–ô –¢–ï–ö–°–¢:** {request.current_text}
**–ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–Æ:** {request.edit_instruction}
**–¢–ï–ö–£–©–ò–ô HTML:** {request.html_content}

**–¢–†–ï–ë–û–í–ê–ù–ò–Ø:**
1. –°–æ—Ö—Ä–∞–Ω–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ —Å—Ç–∏–ª–∏
2. –ü—Ä–∏–º–µ–Ω–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–æ—á–Ω–æ –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
3. –£–±–µ–¥–∏—Å—å, —á—Ç–æ HTML –æ—Å—Ç–∞–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º
4. –°–æ—Ö—Ä–∞–Ω–∏ –≤—Å–µ –∫–ª–∞—Å—Å—ã –∏ –∞—Ç—Ä–∏–±—É—Ç—ã

**–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:**
HTML_START
{{–æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π HTML –∫–æ–¥}}
HTML_END

RESPONSE_START
{{–∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π}}
RESPONSE_END
"""

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ OpenAI
        response = openai_client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {
                    "role": "system",
                    "content": "–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏ HTML/CSS.",
                },
                {"role": "user", "content": edit_prompt},
            ],
            max_tokens=4000,
            temperature=0.7,
        )
        
        response_text = response.choices[0].message.content
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º HTML –∫–æ–¥ –∏–∑ –æ—Ç–≤–µ—Ç–∞
        html_match = re.search(
            r"HTML_START\s*(.*?)\s*HTML_END", response_text, re.DOTALL
        )
        response_match = re.search(
            r"RESPONSE_START\s*(.*?)\s*RESPONSE_END", response_text, re.DOTALL
        )
        
        if html_match:
            updated_html = html_match.group(1).strip()
            response_text = (
                response_match.group(1).strip()
                if response_match
                else "–≠–ª–µ–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω."
            )
            
            return {
                "html_content": updated_html,
                "response": response_text,
                "status": "success",
            }
        else:
            return {
                "html_content": request.html_content,
                "response": "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π HTML –∫–æ–¥.",
                "status": "error",
            }
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞: {e}")
        raise HTTPException(status_code=500, detail=str(e))


@router.get("/api/ai-editor/status")
async def get_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ AI —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞"""
    return {"status": "Editor working"}


def extract_files_from_code(code_content):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ñ–∞–π–ª—ã –∏–∑ –∫–æ–¥–∞ Next.js –ø—Ä–æ–µ–∫—Ç–∞"""
    files = {}

    # –ü–∞—Ä—Å–∏–º —Ñ–∞–π–ª—ã –ø–æ –º–∞—Ä–∫–µ—Ä–∞–º
    markers = [
        ("PACKAGE_JSON_START", "PACKAGE_JSON_END", "package.json"),
        ("TSCONFIG_START", "TSCONFIG_END", "tsconfig.json"),
        ("TAILWIND_CONFIG_START", "TAILWIND_CONFIG_END", "tailwind.config.js"),
        ("NEXT_CONFIG_START", "NEXT_CONFIG_END", "next.config.js"),
        ("LAYOUT_TSX_START", "LAYOUT_TSX_END", "app/layout.tsx"),
        ("PAGE_TSX_START", "PAGE_TSX_END", "app/page.tsx"),
        ("GLOBALS_CSS_START", "GLOBALS_CSS_END", "app/globals.css"),
        ("HERO_COMPONENT_START", "HERO_COMPONENT_END", "components/Hero.tsx"),
        ("FEATURES_COMPONENT_START", "FEATURES_COMPONENT_END", "components/Features.tsx"),
        ("FOOTER_COMPONENT_START", "FOOTER_COMPONENT_END", "components/Footer.tsx"),
        ("BUTTON_COMPONENT_START", "BUTTON_COMPONENT_END", "components/Button.tsx"),
        ("CARD_COMPONENT_START", "CARD_COMPONENT_END", "components/Card.tsx"),
        ("CONTAINER_COMPONENT_START", "CONTAINER_COMPONENT_END", "components/Container.tsx"),
        ("MODAL_COMPONENT_START", "MODAL_COMPONENT_END", "components/Modal.tsx"),
        ("FORM_COMPONENT_START", "FORM_COMPONENT_END", "components/Form.tsx"),
    ]

    for start_marker, end_marker, filename in markers:
        start = code_content.find(start_marker)
        end = code_content.find(end_marker)

        if start != -1 and end != -1:
            start += len(start_marker)
            content = code_content[start:end].strip()

            # –£–¥–∞–ª—è–µ–º markdown-—Ä–∞–∑–º–µ—Ç–∫—É –∏–∑ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
            import re
            if filename.endswith('.json'):
                # –£–¥–∞–ª—è–µ–º ```json –∏ ``` –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ
                content = re.sub(r'^```json\s*', '', content)
                content = re.sub(r'\s*```$', '', content)
            elif filename.endswith('.js') or filename.endswith('.tsx') or filename.endswith('.ts') or filename.endswith('.css'):
                # –£–¥–∞–ª—è–µ–º ```js, ```tsx, ```ts, ```css –∏ ``` –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ
                content = re.sub(r'^```(?:js|tsx|ts|css)?\s*', '', content)
                content = re.sub(r'\s*```$', '', content)

            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º next.config.js –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ App Router
            if filename == "next.config.js":
                if "experimental" not in content:
                    content = content.replace(
                        "module.exports = {",
                        "module.exports = {\n  experimental: {\n    appDir: true\n  },"
                    )
            
            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º package.json –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –≤–µ—Ä—Å–∏–π
            if filename == "package.json":
                # –ó–∞–º–µ–Ω—è–µ–º –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–µ –≤–µ—Ä—Å–∏–∏
                content = content.replace('"framer-motion": "^6.0.0"', '"framer-motion": "^10.16.16"')
                content = content.replace('"react": "latest"', '"react": "^18.2.0"')
                content = content.replace('"react-dom": "latest"', '"react-dom": "^18.2.0"')
                content = content.replace('"next": "latest"', '"next": "^14.0.0"')
                content = content.replace('"tailwindcss": "^3.0.0"', '"tailwindcss": "^3.3.0"')

            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º layout.tsx –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ globals.css
            if filename == "app/layout.tsx":
                content = content.replace("import '../globals.css'", "import './globals.css'")
                content = content.replace("import \"../globals.css\"", "import \"./globals.css\"")
                content = content.replace("import '../styles/globals.css'", "import './globals.css'")
                content = content.replace("import \"../styles/globals.css\"", "import \"./globals.css\"")
                content = content.replace("import '@/styles/globals.css'", "import './globals.css'")
                content = content.replace("import \"@/styles/globals.css\"", "import \"./globals.css\"")
            
            # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º page.tsx –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
            if filename == "app/page.tsx":
                content = content.replace("from './components/", "from '../components/")

            files[filename] = content

    return files


@router.get("/api/ai-editor/download/{conversation_id}")
async def download_project(
    conversation_id: int,
    current_user: User = Depends(get_current_user),
    db: Session = Depends(get_db)
):
    """–°–∫–∞—á–∞—Ç—å Next.js –ø—Ä–æ–µ–∫—Ç –∫–∞–∫ ZIP —Ñ–∞–π–ª"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ conversation –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    conversation = (
        db.query(DBConversation)
        .filter(
            DBConversation.id == conversation_id,
            DBConversation.user_id == current_user.id,
        )
        .first()
    )
    if not conversation:
        raise HTTPException(status_code=404, detail="Conversation not found")

    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ AI-—Å–æ–æ–±—â–µ–Ω–∏–µ
    ai_message = (
        db.query(DBMessage)
        .filter(
            DBMessage.conversation_id == conversation_id,
            DBMessage.role == "assistant"
        )
        .order_by(DBMessage.timestamp.desc())
        .first()
    )
    if not ai_message:
        raise HTTPException(status_code=404, detail="AI message not found")

    # –ò—â–µ–º –∫–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    if "PACKAGE_JSON_START" in ai_message.content:
        import zipfile
        import io

        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ñ–∞–π–ª—ã –∏–∑ –∫–æ–¥–∞
        files = extract_files_from_code(ai_message.content)

        # –°–æ–∑–¥–∞–µ–º ZIP
        zip_buffer = io.BytesIO()
        with zipfile.ZipFile(zip_buffer, 'w', zipfile.ZIP_DEFLATED) as zip_file:
            for filename, content in files.items():
                zip_file.writestr(filename, content)

        zip_buffer.seek(0)

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º ZIP —Ñ–∞–π–ª
        from fastapi.responses import StreamingResponse
        return StreamingResponse(
            io.BytesIO(zip_buffer.read()),
            media_type="application/zip",
            headers={"Content-Disposition": f"attachment; filename=nextjs-project-{conversation_id}.zip"}
        )

    return {"message": "–ö–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω", "status": "error"}


@router.get("/api/ai-editor/project/{conversation_id}/preview")
async def preview_project(
    conversation_id: int,
    current_user: User = Depends(get_current_user),
    db: Session = Depends(get_db)
):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç URL live-–ø—Ä–µ–≤—å—é Next.js –ø—Ä–æ–µ–∫—Ç–∞"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ conversation –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    conversation = (
        db.query(DBConversation)
        .filter(
            DBConversation.id == conversation_id,
            DBConversation.user_id == current_user.id,
        )
        .first()
    )
    if not conversation:
        raise HTTPException(status_code=404, detail="Conversation not found")

    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ AI-—Å–æ–æ–±—â–µ–Ω–∏–µ
    ai_message = (
        db.query(DBMessage)
        .filter(
            DBMessage.conversation_id == conversation_id,
            DBMessage.role == "assistant"
        )
        .order_by(DBMessage.timestamp.desc())
        .first()
    )
    if not ai_message or "PACKAGE_JSON_START" not in ai_message.content:
        raise HTTPException(status_code=404, detail="Project code not found")

    # –°–æ–±–∏—Ä–∞–µ–º —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞
    files = extract_files_from_code(ai_message.content)

    # –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
    project_dir = os.path.join("./uploads/projects", str(conversation_id))

    # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥
    os.makedirs(project_dir, exist_ok=True)

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã
    for path, content in files.items():
        full_path = os.path.join(project_dir, path)
        os.makedirs(os.path.dirname(full_path), exist_ok=True)
        with open(full_path, "w", encoding="utf-8") as f:
            f.write(content)

    # Restart server to pick up updated files
    from utils.nextjs_manager import nextjs_manager as manager
    if str(conversation_id) in manager.servers:
        old_info = manager.servers.pop(str(conversation_id))
        try:
            old_info['process'].terminate()
        except Exception:
            pass
    # Start new Next.js server instance
    try:
        server_info = manager.start_nextjs_server(str(conversation_id), project_dir)
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–∫—Å–∏
        from utils.auth_utils import create_access_token
        token = create_access_token(data={"sub": current_user.username})
        return {"status": "running", "url": f"/api/ai-editor/project/{conversation_id}/preview-proxy?token={token}"}
    except Exception as e:
        raise HTTPException(status_code=500, detail=f"Failed to start Next.js server: {e}")


@router.get("/api/ai-editor/project/{conversation_id}/preview-proxy/{path:path}")
async def preview_proxy(
    conversation_id: int,
    path: str,
    token: str = Query(None),
    db: Session = Depends(get_db)
):
    """–ü—Ä–æ–∫—Å–∏ –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ Next.js –ø—Ä–æ–µ–∫—Ç–∞"""
    import httpx
    from fastapi import Query
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –µ—Å–ª–∏ –æ–Ω –ø–µ—Ä–µ–¥–∞–Ω
    if token:
        try:
            from utils.auth_utils import decode_token
            payload = decode_token(token)
            if payload is None:
                raise HTTPException(status_code=401, detail="Invalid token")
            username = payload.get("sub")
            if not username:
                raise HTTPException(status_code=401, detail="Invalid token")
        except Exception:
            raise HTTPException(status_code=401, detail="Invalid token")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ
    from utils.nextjs_manager import nextjs_manager
    if str(conversation_id) not in nextjs_manager.servers:
        raise HTTPException(status_code=404, detail="Server not running")
    
    server_info = nextjs_manager.servers[str(conversation_id)]
    server_url = f"http://localhost:{server_info['port']}"
    
    try:
        async with httpx.AsyncClient(timeout=30.0) as client:
            resp = await client.get(f"{server_url}/{path}")
            return Response(
                content=resp.content,
                media_type=resp.headers.get("content-type", "text/html"),
                status_code=resp.status_code
            )
    except httpx.TimeoutException:
        raise HTTPException(status_code=504, detail="Next.js server timeout")
    except HTTPException:
        raise
    except Exception as e:
        # Provide exception type and message for debugging
        print(f"Proxy error details for path {path}: {type(e).__name__}: {e}")
        raise HTTPException(status_code=500, detail=f"Proxy error: {type(e).__name__}: {str(e)}")


@router.get("/api/ai-editor/project/{conversation_id}/preview-proxy")
async def preview_proxy_root(
    conversation_id: int,
    token: str = Query(None),
    db: Session = Depends(get_db)
):
    """–ü—Ä–æ–∫—Å–∏ –¥–ª—è –∫–æ—Ä–Ω—è Next.js –ø—Ä–æ–µ–∫—Ç–∞"""
    import httpx
    import asyncio
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω, –µ—Å–ª–∏ –æ–Ω –ø–µ—Ä–µ–¥–∞–Ω
    if token:
        try:
            from utils.auth_utils import decode_token
            payload = decode_token(token)
            if payload is None or not payload.get("sub"):
                raise HTTPException(status_code=401, detail="Invalid token")
        except Exception:
            raise HTTPException(status_code=401, detail="Invalid token")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ
    from utils.nextjs_manager import nextjs_manager
    if str(conversation_id) not in nextjs_manager.servers:
        raise HTTPException(status_code=404, detail="Server not running")
    
    server_info = nextjs_manager.servers[str(conversation_id)]
    server_url = f"http://localhost:{server_info['port']}"
    
    # –ñ–¥–µ–º, –ø–æ–∫–∞ —Å–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤
    max_retries = 30
    for i in range(max_retries):
        try:
            async with httpx.AsyncClient(timeout=2.0) as client:
                resp = await client.get(f"{server_url}/_next/static/development/_devPagesManifest.json")
                if resp.status_code in [200, 404]:
                    # –°–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤
                    break
        except:
            if i == max_retries - 1:
                raise HTTPException(status_code=503, detail="Next.js server is not ready yet. Please try again in a few seconds.")
            await asyncio.sleep(1)
    
    try:
        async with httpx.AsyncClient(timeout=30.0) as client:
            resp = await client.get(server_url)
            # Rewrite asset URLs so they pass through the preview-proxy endpoint
            html_text = resp.content.decode('utf-8', errors='ignore')
            proxy_prefix = f"/api/ai-editor/project/{conversation_id}/preview-proxy"
            
            # Replace all absolute paths to _next/ with proxy paths using regex
            import re
            # Replace src="/_next/ with src="/api/ai-editor/project/{id}/preview-proxy/_next/
            html_text = re.sub(r'src="/_next/', f'src="{proxy_prefix}/_next/', html_text)
            # Replace href="/_next/ with href="/api/ai-editor/project/{id}/preview-proxy/_next/
            html_text = re.sub(r'href="/_next/', f'href="{proxy_prefix}/_next/', html_text)
            # Replace any other "/_next/ references
            html_text = re.sub(r'"/_next/', f'"{proxy_prefix}/_next/', html_text)
            
            # Fix navigation issues by ensuring proper base URL handling
            # Add base tag to prevent relative URL issues
            if '<head>' in html_text and '<base' not in html_text:
                html_text = html_text.replace('<head>', f'<head><base href="{proxy_prefix}/">')
            
            # Prevent iframe navigation issues by adding sandbox attributes
            # This ensures the iframe content doesn't interfere with the parent page
            if '<body' in html_text:
                html_text = html_text.replace('<body', '<body data-iframe="true"')
            
            # Return rewritten HTML
            return Response(
                content=html_text.encode('utf-8'),
                media_type=resp.headers.get("content-type", "text/html"),
                status_code=resp.status_code
            )
    except httpx.TimeoutException:
        raise HTTPException(status_code=504, detail="Next.js server timeout")
    except HTTPException:
        raise
    except Exception as e:
        # Provide exception type and message for debugging
        print(f"Proxy error details: {type(e).__name__}: {e}")
        raise HTTPException(status_code=500, detail=f"Proxy error: {type(e).__name__}: {str(e)}")
